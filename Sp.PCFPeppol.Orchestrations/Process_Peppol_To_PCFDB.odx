#if __DESIGNER_DATA
#error Do not define __DESIGNER_DATA.
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<om:MetaModel MajorVersion="1" MinorVersion="3" Core="2b131234-7959-458d-834f-2dc0769ce683" ScheduleModel="66366196-361d-448d-976f-cab5e87496d2" xmlns:om="http://schemas.microsoft.com/BizTalk/2003/DesignerData">
    <om:Element Type="Module" OID="c4c48fb8-b9df-492a-aaac-c170e06e5ce2" LowerBound="1.1" HigherBound="640.1">
        <om:Property Name="ReportToAnalyst" Value="True" />
        <om:Property Name="Name" Value="Sp.PCFPeppol.Orchestrations" />
        <om:Property Name="Signal" Value="False" />
        <om:Element Type="PortType" OID="5c5135fb-9fb3-40e9-b6e5-7f821f0eb70d" ParentLink="Module_PortType" LowerBound="4.1" HigherBound="11.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_RcvPollPCFPeppolDocIds" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="39e18461-79d9-4233-82f1-4db9dd56011e" ParentLink="PortType_OperationDeclaration" LowerBound="6.1" HigherBound="10.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="68b783f8-e544-47f3-b23a-e6108f06129b" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="8.13" HigherBound="8.102">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspPCFPeppolPoll_TypedPolling_InterfacePCFPeppolPolling.TypedPolling" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="65f6cd53-2531-446d-9e8d-5e682a4614cb" ParentLink="Module_PortType" LowerBound="11.1" HigherBound="18.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndPeppolToPCFErrorLogs" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="da04e26a-9974-4de5-aee0-1ea2d13d4052" ParentLink="PortType_OperationDeclaration" LowerBound="13.1" HigherBound="17.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="217d238a-f346-48cd-850d-9408ca978c0d" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="15.13" HigherBound="15.27">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Orchestrations.MultiErrorLogs" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="b11a753d-948e-42fb-bbbc-1414825d7fe1" ParentLink="Module_PortType" LowerBound="18.1" HigherBound="25.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_PeppolToPCFErrorEmail" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="d3cf668f-c373-481a-baa8-52814a44ad42" ParentLink="PortType_OperationDeclaration" LowerBound="20.1" HigherBound="24.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="14fb63de-8df9-4406-93ce-cfb9c5c5ba38" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="22.13" HigherBound="22.28">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Orchestrations.MultiErrorEmail" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="4ed3ec4f-d081-4a6d-83b2-c3cd1c8207c7" ParentLink="Module_PortType" LowerBound="25.1" HigherBound="32.1">
            <om:Property Name="Synchronous" Value="True" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndRcvGRNInvoice" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="0aae7a4d-10c4-4ccc-bc97-92287fc651c5" ParentLink="PortType_OperationDeclaration" LowerBound="27.1" HigherBound="31.1">
                <om:Property Name="OperationType" Value="RequestResponse" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="5fae6779-aa32-48ce-850d-219c2b597862" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="29.13" HigherBound="29.98">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoice" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="MessageRef" OID="85a4a972-ea95-4dc6-b4f0-f8ad4cde4dac" ParentLink="OperationDeclaration_ResponseMessageRef" LowerBound="29.100" HigherBound="29.193">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoiceResponse" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Response" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="45fc33cb-8d1f-4632-8f58-294e3bc0f204" ParentLink="Module_PortType" LowerBound="32.1" HigherBound="39.1">
            <om:Property Name="Synchronous" Value="True" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndRcvPCFPeppolHeadValidate" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="e084d4af-ff80-4cfa-a391-c56ae0ba0f28" ParentLink="PortType_OperationDeclaration" LowerBound="34.1" HigherBound="38.1">
                <om:Property Name="OperationType" Value="RequestResponse" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="383d3883-9be7-47ab-a5f4-f999a27964ef" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="36.13" HigherBound="36.105">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidation" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="MessageRef" OID="dc068949-c8e9-4c8d-94b5-ae963767f7e6" ParentLink="OperationDeclaration_ResponseMessageRef" LowerBound="36.107" HigherBound="36.207">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidationResponse" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Response" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="a718a636-1eab-4162-bda8-7e8d17dd2f28" ParentLink="Module_PortType" LowerBound="39.1" HigherBound="46.1">
            <om:Property Name="Synchronous" Value="True" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndRcvPCFPeppolItemValidate" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="3e1bd5d0-29ba-4430-bdb8-bde9572c72b2" ParentLink="PortType_OperationDeclaration" LowerBound="41.1" HigherBound="45.1">
                <om:Property Name="OperationType" Value="RequestResponse" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="563cc4e0-0a82-40a8-b8d4-0d2c75b2f62a" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="43.13" HigherBound="43.112">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidation" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="MessageRef" OID="f8bdc288-1440-484b-a036-c2d3da41bc25" ParentLink="OperationDeclaration_ResponseMessageRef" LowerBound="43.114" HigherBound="43.221">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidationResponse" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Response" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="33c66393-8253-49f3-960f-9711eb64ecb5" ParentLink="Module_PortType" LowerBound="46.1" HigherBound="53.1">
            <om:Property Name="Synchronous" Value="True" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndRcvPCFPeppolAttachment" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="3805bc64-b455-447b-9fbb-dd3b4b6e7e6b" ParentLink="PortType_OperationDeclaration" LowerBound="48.1" HigherBound="52.1">
                <om:Property Name="OperationType" Value="RequestResponse" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="49f5ef9d-4176-4be1-924c-57b1ba4ef9ef" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="50.13" HigherBound="50.98">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachment" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="MessageRef" OID="f078140a-4fb6-4f6b-8bc6-ab88e8bb918e" ParentLink="OperationDeclaration_ResponseMessageRef" LowerBound="50.100" HigherBound="50.193">
                    <om:Property Name="Ref" Value="Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachmentResponse" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Response" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="ServiceDeclaration" OID="fb162336-a871-4b8f-8579-7ad8a6c7be1f" ParentLink="Module_ServiceDeclaration" LowerBound="53.1" HigherBound="639.1">
            <om:Property Name="InitializedTransactionType" Value="False" />
            <om:Property Name="IsInvokable" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="Process_Peppol_To_PCFDB" />
            <om:Property Name="Signal" Value="True" />
            <om:Element Type="VariableDeclaration" OID="d52c4173-8504-4538-b233-ab0275e61cca" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="87.1" HigherBound="88.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachmentLoopCounter" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="ded648c6-a397-46fd-a92c-6d221dbb3c55" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="88.1" HigherBound="89.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachmentsCount" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="b6beee7c-62d7-4500-9e5c-d03433c390c1" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="89.1" HigherBound="90.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varInvLineLoopItem" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="d157ec38-553f-46dd-a322-a7be0259d267" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="90.1" HigherBound="91.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varGRNCount" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="0c0c735f-d129-4978-8313-ca3d1645dae7" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="91.1" HigherBound="92.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varGRNNumber" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="e3aae728-9206-4d5c-bc63-9a3296879ad9" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="92.1" HigherBound="93.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varInvoiceLineCount" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="cf274f60-bfd2-418f-ae4d-79a022cd3812" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="93.1" HigherBound="94.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varPeppolXMLPath" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="3306abdd-4dbb-48f6-ba80-9091b861b116" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="94.1" HigherBound="95.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varItemValidateRespStatus" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="ad2f1404-15cc-447d-93d3-eca00a2919e5" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="95.1" HigherBound="96.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varItemValidateRespmsg" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="2386497f-3706-4507-b191-b0ab73cde694" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="96.1" HigherBound="97.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varExceptionmsg" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="a11908ae-9c8c-41c0-bf58-2967c55625b6" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="97.1" HigherBound="98.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="System.Text.StringBuilder" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varEmailBody" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="bcdfdc7a-be4e-4b62-bf41-6ed3075b340a" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="98.1" HigherBound="99.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="System.Xml.XmlDocument" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varTempXML" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="7ce98d9c-40ca-4014-9ade-8754098dda4c" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="99.1" HigherBound="100.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varRecordCount" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="15389693-a553-4c35-80ae-fd50d7936afd" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="100.1" HigherBound="101.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLoopItem" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="95b1561e-a17d-4656-bb96-c02c6886b51d" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="101.1" HigherBound="102.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLoopCounter" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="6d5989e8-98d6-4f74-97a0-8688daedf633" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="102.1" HigherBound="103.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varInvoiceID" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="979bf465-f9be-4d9f-9098-7cba1f051336" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="103.1" HigherBound="104.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varHeadValidateRespStatus" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="3e895843-f9dd-43b6-a4aa-6d485011b2c6" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="104.1" HigherBound="105.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varHeadValidateRespmsg" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="2b775c79-2e60-42e4-970b-0cd5163cb139" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="105.1" HigherBound="106.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="System.Text.StringBuilder" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varUserEmailBody" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="107d6dbb-531e-479c-81a1-af65b96a487b" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="106.1" HigherBound="107.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLineId" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="281ec1ce-3320-4b87-84c5-af66e31ce675" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="107.1" HigherBound="108.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLineQty" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="3709eab4-985c-489e-b0aa-a8858891e965" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="108.1" HigherBound="109.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLineAmount" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="bc2a9801-1ce2-404c-ae3f-893644816b0d" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="109.1" HigherBound="110.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varTaxId" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="2896b18c-be28-4926-b4cc-1d57c3817374" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="110.1" HigherBound="111.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varTaxPercent" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="14a10bea-6e4b-4d78-8bd1-ac28e6048450" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="111.1" HigherBound="112.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varTaxSchemeName" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="1e433a1c-db4e-40ee-be44-1635d39bf172" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="112.1" HigherBound="113.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varUnitPrice" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="59c669cd-150e-4445-98a4-a45c184a2258" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="113.1" HigherBound="114.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="isMultipleGRN" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="0f04eb27-0cb2-4440-93ba-4cd63de7fdc6" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="114.1" HigherBound="115.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varOrderLineRefId" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="c342fb78-bc6d-4443-bc53-0e800d1f38be" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="115.1" HigherBound="116.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varInvLineLoopCounter" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="a9eb983f-a619-4a86-b2f0-97d0a4a599d6" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="116.1" HigherBound="117.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varOrderLineRef" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="c026fcd9-7f29-45e2-bbc8-7198055eb8b9" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="117.1" HigherBound="118.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachmentLoopItem" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="c63275c6-21a7-413c-a28c-90020385de42" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="118.1" HigherBound="119.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachmentPath" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="834a6a08-3f3a-42f6-955e-0a2fa77b72c3" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="119.1" HigherBound="120.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachRespStatus" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="51c35687-7b0b-4806-abb3-edd3d9d9facd" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="120.1" HigherBound="121.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachRespMsg" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="7ac0f38f-34f0-4cd2-ac66-3c187866f8b3" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="121.1" HigherBound="122.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachmentID" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="244cad0b-e787-41b8-afb4-e7964fcf497f" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="122.1" HigherBound="123.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachIDResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="67d8c16a-2538-4289-9c53-4e0193087c55" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="123.1" HigherBound="124.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varBase64Code" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="c8397322-6fb6-4aac-8bff-77a4a0245d7e" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="124.1" HigherBound="125.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varBase64Length" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="1fcf716f-eba7-4c65-87d6-d82b956697c8" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="125.1" HigherBound="126.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Double" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varBase64sizeInBytes" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="d8a9e325-3e1f-46a6-a7b6-1f22b2ba6825" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="126.1" HigherBound="127.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Double" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varBase64sizeInKb" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="620c2ce3-309e-42b1-8941-8b81981c185a" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="127.1" HigherBound="128.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAttachSizeLimit" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="2db6a297-0eaa-45ca-9c60-be3b597d1129" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="71.1" HigherBound="72.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.InvoiceLine" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgInvoiceLine" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="e366728c-cc75-432c-8623-428448925521" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="72.1" HigherBound="73.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.PCFPeppolInternalXML" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgInternalXML" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="98106613-29b5-40fd-beb6-e1a53eea6578" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="73.1" HigherBound="74.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.PeppolInput" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPeppolXML" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="3a912a2a-74e3-4fd7-bfd7-58b165e558da" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="74.1" HigherBound="75.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.MultiErrorLogs" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgErrorLogs" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="e38d94c6-0a65-447c-81bc-5fd4c88a676a" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="75.1" HigherBound="76.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.MultiErrorEmail" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgErrorEmail" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="ae91f356-6989-4414-a711-a616e0525d84" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="76.1" HigherBound="77.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFPeppolPoll_TypedPolling_InterfacePCFPeppolPolling.TypedPolling" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPollDocIds" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="9de21874-3350-467f-9843-04efc27522ae" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="77.1" HigherBound="78.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFPeppolPoll_TypedPolling_InterfacePCFPeppolPolling.TypedPollingResultSet0" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgSingleDocId" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="644ee766-10f5-450c-90e3-309f05555d22" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="78.1" HigherBound="79.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoice" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgGRNInvoicereq" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="33c5dc43-3743-40ae-bfd1-ff7c28b09721" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="79.1" HigherBound="80.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoiceResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgGRNInvoiceresp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="0d7ff7d7-96a4-4f91-a03e-d13a11a33b85" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="80.1" HigherBound="81.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidation" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspHeadValidateReq" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="6cb368ab-a316-4bec-a1c6-7f57df406edd" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="81.1" HigherBound="82.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidationResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspHeadValidateResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="b5e0c2f9-ac3f-4b46-b073-d7fd9821a80e" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="82.1" HigherBound="83.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidation" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspItemValidateReq" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="a5291adf-93bb-4b3e-86f2-d14bfc9a731d" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="83.1" HigherBound="84.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidationResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspItemValidateResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="7efda94f-9865-463c-a6f0-93af33d5fe20" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="84.1" HigherBound="85.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.InvoiceAttachment" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgSingleAttachment" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="08ddcf78-9eb7-4000-aefb-275002a528fa" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="85.1" HigherBound="86.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachment" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspAttachReq" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="b4d78db5-21fc-4f05-827f-941df98072a9" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="86.1" HigherBound="87.1">
                <om:Property Name="Type" Value="Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachmentResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspAttachResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="ServiceBody" OID="f80c1b39-33d0-477a-bf6d-983fc8e741a9" ParentLink="ServiceDeclaration_ServiceBody">
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="Receive" OID="9e14cef5-87cf-4d10-8699-36d2a16c4aba" ParentLink="ServiceBody_Statement" LowerBound="130.1" HigherBound="172.1">
                    <om:Property Name="Activate" Value="True" />
                    <om:Property Name="PortName" Value="Port_RcvPollPCFPeppolDocIds" />
                    <om:Property Name="MessageName" Value="msgPollDocIds" />
                    <om:Property Name="OperationName" Value="Operation_1" />
                    <om:Property Name="OperationMessageName" Value="Request" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Receive_1" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="VariableAssignment" OID="e105a5e3-28d6-4a2c-95bf-fcc091e0434a" ParentLink="ServiceBody_Statement" LowerBound="172.1" HigherBound="176.1">
                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;PeppolToPCFDB Process Start&quot;,&quot;PeppolToPCFDB Process Started&quot;);&#xD;&#xA;varRecordCount = System.Convert.ToInt32(xpath(msgPollDocIds,&quot;count(/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='Id' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling'])&quot;));&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;PCFPeppolInvoiceCount&quot;,varRecordCount.ToString());" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Process_Count" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="While" OID="46bd182a-2b1b-48e9-88d4-6a53f40ee737" ParentLink="ServiceBody_Statement" LowerBound="176.1" HigherBound="635.1">
                    <om:Property Name="Expression" Value="varLoopCounter &lt; varRecordCount" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="ForEachRow" />
                    <om:Property Name="Signal" Value="False" />
                    <om:Element Type="Scope" OID="a8d1df65-7e2b-4716-9453-fd6018a277e6" ParentLink="ComplexStatement_Statement" LowerBound="179.1" HigherBound="632.1">
                        <om:Property Name="InitializedTransactionType" Value="True" />
                        <om:Property Name="IsSynchronized" Value="False" />
                        <om:Property Name="ReportToAnalyst" Value="True" />
                        <om:Property Name="Name" Value="ProcessEachRecord" />
                        <om:Property Name="Signal" Value="True" />
                        <om:Element Type="VariableAssignment" OID="0b962fdd-9939-4f5c-aaed-573fc0a785e1" ParentLink="ComplexStatement_Statement" LowerBound="184.1" HigherBound="197.1">
                            <om:Property Name="Expression" Value="varHeadValidateRespStatus = &quot;&quot;;&#xD;&#xA;varItemValidateRespStatus = &quot;&quot;;&#xD;&#xA;varAttachmentsCount = 0;&#xD;&#xA;varAttachmentLoopCounter = 0;&#xD;&#xA;varInvLineLoopCounter = 0;&#xD;&#xA;varAttachmentLoopItem = &quot;&quot;;&#xD;&#xA;varInvLineLoopItem = &quot;&quot;;&#xD;&#xA;varAttachRespStatus = &quot;&quot;;&#xD;&#xA;varBase64Code = &quot;&quot;;&#xD;&#xA;varBase64Length = 0;&#xD;&#xA;varBase64sizeInBytes = 0;&#xD;&#xA;varBase64sizeInKb = 0;&#xD;&#xA;" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Reset_Var" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Construct" OID="b482115c-d3ef-4a60-bd7a-4068ac390ad5" ParentLink="ComplexStatement_Statement" LowerBound="197.1" HigherBound="209.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_SingleRow" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageAssignment" OID="9674e6e6-0694-4bec-ba10-979ef97f1b2a" ParentLink="ComplexStatement_Statement" LowerBound="200.1" HigherBound="208.1">
                                <om:Property Name="Expression" Value="varLoopCounter = varLoopCounter + 1;&#xD;&#xA;varLoopItem = varLoopCounter.ToString();&#xD;&#xA;&#xD;&#xA;msgSingleDocId = xpath(msgPollDocIds,&quot;/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling'][&quot;+ varLoopItem +&quot;]&quot;);&#xD;&#xA;&#xD;&#xA;varInvoiceID = msgSingleDocId.Id;&#xD;&#xA;varPeppolXMLPath = msgSingleDocId.PeppolXMLPath;" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MessageAssignment_1" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="MessageRef" OID="07d52ec3-a1e3-4477-be66-70351d110f4d" ParentLink="Construct_MessageRef" LowerBound="198.35" HigherBound="198.49">
                                <om:Property Name="Ref" Value="msgSingleDocId" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="9c4965c7-514d-47cb-a74c-66c9f048da4a" ParentLink="ComplexStatement_Statement" LowerBound="209.1" HigherBound="234.1">
                            <om:Property Name="Expression" Value="if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;ShowAdminLogs&quot;)) == &quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;InvoiceID&quot;,varInvoiceID);&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msgPollDocIds;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPollDocIds&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPollDocIds&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msgSingleDocId;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSingleDocId&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSingleDocId&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="PrintLogs" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Scope" OID="be59f2ba-2086-474d-a8c3-ad18915c2d40" ParentLink="ComplexStatement_Statement" LowerBound="234.1" HigherBound="289.1">
                            <om:Property Name="InitializedTransactionType" Value="True" />
                            <om:Property Name="IsSynchronized" Value="False" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Scope_Head_Validation" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="Construct" OID="5e420ccf-f58b-4463-b8b6-4ca22d0e7cb0" ParentLink="ComplexStatement_Statement" LowerBound="239.1" HigherBound="247.1">
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Const_Head_Validate" />
                                <om:Property Name="Signal" Value="True" />
                                <om:Element Type="MessageAssignment" OID="4f209ee1-0dd2-42d3-958e-dcbe641326e3" ParentLink="ComplexStatement_Statement" LowerBound="242.1" HigherBound="246.1">
                                    <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfacePCFPeppolHeaderValidation xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:ID&gt;&quot; + varInvoiceID + &quot;&lt;/ns0:ID&gt;&lt;/ns0:InterfacePCFPeppolHeaderValidation&gt;&quot;);&#xD;&#xA;msguspHeadValidateReq = varTempXML;" />
                                    <om:Property Name="ReportToAnalyst" Value="False" />
                                    <om:Property Name="Name" Value="MessageAssignment_2" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="MessageRef" OID="350ba4d8-afbf-4a71-9f03-fa797969a5c0" ParentLink="Construct_MessageRef" LowerBound="240.43" HigherBound="240.64">
                                    <om:Property Name="Ref" Value="msguspHeadValidateReq" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                            </om:Element>
                            <om:Element Type="Send" OID="f8bb9c04-9673-446f-a519-2d5bb87d024f" ParentLink="ComplexStatement_Statement" LowerBound="247.1" HigherBound="249.1">
                                <om:Property Name="PortName" Value="Port_SndRcvPCFPeppolHeadValidate" />
                                <om:Property Name="MessageName" Value="msguspHeadValidateReq" />
                                <om:Property Name="OperationName" Value="Operation_1" />
                                <om:Property Name="OperationMessageName" Value="Request" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Snd_Head_Validate" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="Receive" OID="98e21be1-8af9-4744-b0c1-2e1a7d3849f0" ParentLink="ComplexStatement_Statement" LowerBound="249.1" HigherBound="251.1">
                                <om:Property Name="Activate" Value="False" />
                                <om:Property Name="PortName" Value="Port_SndRcvPCFPeppolHeadValidate" />
                                <om:Property Name="MessageName" Value="msguspHeadValidateResp" />
                                <om:Property Name="OperationName" Value="Operation_1" />
                                <om:Property Name="OperationMessageName" Value="Response" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Rcv_Head_Validate" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="VariableAssignment" OID="94ebcc46-8355-42ba-b594-d07ed2b42702" ParentLink="ComplexStatement_Statement" LowerBound="251.1" HigherBound="275.1">
                                <om:Property Name="Expression" Value="if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;ShowAdminLogs&quot;)) == &quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msguspHeadValidateReq;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspHeadValidateReq&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspHeadValidateReq&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msguspHeadValidateResp;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspHeadValidateResp&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspHeadValidateResp&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="PrintLogs" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="VariableAssignment" OID="a47ee956-b933-4561-9ad0-8ae946fa52f6" ParentLink="ComplexStatement_Statement" LowerBound="275.1" HigherBound="278.1">
                                <om:Property Name="Expression" Value="varHeadValidateRespStatus = xpath(msguspHeadValidateResp,&quot;string(/*[local-name()='InterfacePCFPeppolHeaderValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation']/*[local-name()='resStatus' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation'])&quot;);&#xD;&#xA;varHeadValidateRespmsg = xpath(msguspHeadValidateResp,&quot;string(/*[local-name()='InterfacePCFPeppolHeaderValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation']/*[local-name()='resDescription' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation'])&quot;);" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="ValidationResp" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="Catch" OID="00f42c32-aa41-4cd4-b263-57865cc7b6aa" ParentLink="Scope_Catch" LowerBound="281.1" HigherBound="287.1">
                                <om:Property Name="ExceptionName" Value="ex" />
                                <om:Property Name="ExceptionType" Value="Microsoft.XLANGs.BaseTypes.DeliveryFailureException" />
                                <om:Property Name="IsFaultMessage" Value="False" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Head_Validation_Failed" />
                                <om:Property Name="Signal" Value="True" />
                                <om:Element Type="VariableAssignment" OID="7157593b-dab1-4788-a1a4-d1411826fe3e" ParentLink="Catch_Statement" LowerBound="284.1" HigherBound="286.1">
                                    <om:Property Name="Expression" Value="varHeadValidateRespStatus = &quot;false&quot;;" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Expression_1" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type="Decision" OID="8a5024be-de56-4470-9186-99937373d13a" ParentLink="ComplexStatement_Statement" LowerBound="289.1" HigherBound="575.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Chk_Head_Validation" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="DecisionBranch" OID="6a6f2797-4fbf-4b78-aeb6-77294049f194" ParentLink="ReallyComplexStatement_Branch" LowerBound="290.25" HigherBound="570.1">
                                <om:Property Name="Expression" Value="varHeadValidateRespStatus == &quot;true&quot;" />
                                <om:Property Name="IsGhostBranch" Value="True" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="If_Success" />
                                <om:Property Name="Signal" Value="True" />
                                <om:Element Type="Construct" OID="3fcd5197-515b-4bd0-a78a-b8ed058a4d50" ParentLink="ComplexStatement_Statement" LowerBound="292.1" HigherBound="300.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Const_PeppolXML" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="MessageAssignment" OID="5d8854d8-b887-4dd2-a878-2c96ac25adf8" ParentLink="ComplexStatement_Statement" LowerBound="295.1" HigherBound="299.1">
                                        <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.Load(varPeppolXMLPath);&#xD;&#xA;msgPeppolXML=varTempXML;" />
                                        <om:Property Name="ReportToAnalyst" Value="False" />
                                        <om:Property Name="Name" Value="MessageAssignment_2" />
                                        <om:Property Name="Signal" Value="True" />
                                    </om:Element>
                                    <om:Element Type="MessageRef" OID="22b5101f-4154-46bf-9adf-41dcf9bbb9df" ParentLink="Construct_MessageRef" LowerBound="293.39" HigherBound="293.51">
                                        <om:Property Name="Ref" Value="msgPeppolXML" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="7466798f-14ef-4989-a48a-550c9795dee5" ParentLink="ComplexStatement_Statement" LowerBound="300.1" HigherBound="323.1">
                                    <om:Property Name="Expression" Value="varInvoiceLineCount = System.Convert.ToInt32(xpath(msgPeppolXML,&quot;count(/*[local-name()='StandardBusinessDocument' and namespace-uri()='http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader']/*[local-name()='Invoice' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2']/*[local-name()='InvoiceLine' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'])&quot;));&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;InvoiceLineCount&quot;,varInvoiceLineCount.ToString());&#xD;&#xA;&#xD;&#xA;varAttachmentsCount  = System.Convert.ToInt32(xpath(msgPeppolXML,&quot;count(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='AdditionalDocumentReference'])&quot;));&#xD;&#xA;&#xD;&#xA;//varInvLineCount = System.Convert.ToInt32(xpath(msgPeppolXML,&quot;count(/*[local-name()='StandardBusinessDocument' and namespace-uri()='http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader']/*[local-name()='CreditNote' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2']/*[local-name()='CreditNoteLine' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'])&quot;));&#xD;&#xA;//System.Diagnostics.EventLog.WriteEntry(&quot;CreditLineCount&quot;,varInvLineCount.ToString());&#xD;&#xA;&#xD;&#xA;varGRNNumber = xpath(msgPeppolXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='DocumentReference']/*[local-name()='ID'])&quot;);&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;GRNNumber&quot;,varGRNNumber);&#xD;&#xA;&#xD;&#xA;varGRNCount = System.Convert.ToInt32(xpath(msgPeppolXML,&quot;count(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='DocumentReference']/*[local-name()='ID']/text()[contains(.,'&quot; + varGRNNumber + &quot;')])&quot;));&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;GRNCount&quot;,varGRNCount.ToString());&#xD;&#xA;&#xD;&#xA;if(((varInvoiceLineCount &gt; 0) &amp; (varInvoiceLineCount == varGRNCount)) || (varInvoiceLineCount == 0) || (varGRNCount == 0))&#xD;&#xA;{&#xD;&#xA;    isMultipleGRN = &quot;N&quot;;&#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;   isMultipleGRN = &quot;Y&quot;;&#xD;&#xA;}&#xD;&#xA;" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Chk_GRN_Multiple" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="Construct" OID="24c623c5-2f74-4f1a-9f5c-1c76ed61d0d2" ParentLink="ComplexStatement_Statement" LowerBound="323.1" HigherBound="329.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Const_PeppolXML_PCFPeppol" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="MessageRef" OID="35919e9e-a914-4778-8a1a-428a322bcd69" ParentLink="Construct_MessageRef" LowerBound="324.39" HigherBound="324.53">
                                        <om:Property Name="Ref" Value="msgInternalXML" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                    <om:Element Type="Transform" OID="7e3d697d-7f05-4e08-8880-7f12f1a97520" ParentLink="ComplexStatement_Statement" LowerBound="326.1" HigherBound="328.1">
                                        <om:Property Name="ClassName" Value="Sp.PCFPeppol.Transforms.Map_PeppolXML_PCFPeppolInternal" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Name" Value="Transform_1" />
                                        <om:Property Name="Signal" Value="True" />
                                        <om:Element Type="MessagePartRef" OID="d47619db-de5a-4709-840f-7671c9fb6119" ParentLink="Transform_InputMessagePartRef" LowerBound="327.119" HigherBound="327.131">
                                            <om:Property Name="MessageRef" Value="msgPeppolXML" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_1" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                        <om:Element Type="MessagePartRef" OID="193bff52-ff86-4ac5-847b-6d75e45ebfd3" ParentLink="Transform_OutputMessagePartRef" LowerBound="327.44" HigherBound="327.58">
                                            <om:Property Name="MessageRef" Value="msgInternalXML" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_2" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="6213f182-6672-4318-88fa-dd2420e1b77a" ParentLink="ComplexStatement_Statement" LowerBound="329.1" HigherBound="353.1">
                                    <om:Property Name="Expression" Value="if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;ShowAdminLogs&quot;)) == &quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msgPeppolXML;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolXML&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolXML&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msgInternalXML;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInternalXML&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInternalXML&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="PrintLogs" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="e5cedfd7-d7cf-4fb8-b281-20f6ad1d9b5b" ParentLink="ComplexStatement_Statement" LowerBound="353.1" HigherBound="357.1">
                                    <om:Property Name="Expression" Value="varInvLineLoopCounter = 0;&#xD;&#xA;varInvoiceLineCount = System.Convert.ToInt32(xpath(msgInternalXML,&quot;count(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine'])&quot;));&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;PCFPeppolInvLineCount&quot;,varInvoiceLineCount.ToString());" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Inv_Loop_Counter" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="While" OID="50b2e481-9aef-426a-855a-b830d0ee7bed" ParentLink="ComplexStatement_Statement" LowerBound="357.1" HigherBound="438.1">
                                    <om:Property Name="Expression" Value="varInvLineLoopCounter &lt; varInvoiceLineCount" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Loop_Each_Inv_Item" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="Scope" OID="783e037e-f006-4f14-af4d-8c3e4c88910d" ParentLink="ComplexStatement_Statement" LowerBound="360.1" HigherBound="437.1">
                                        <om:Property Name="InitializedTransactionType" Value="True" />
                                        <om:Property Name="IsSynchronized" Value="False" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Name" Value="Scope_1" />
                                        <om:Property Name="Signal" Value="True" />
                                        <om:Element Type="Construct" OID="2dec3747-4cf6-4eb6-990c-4ed0bd2f5595" ParentLink="ComplexStatement_Statement" LowerBound="365.1" HigherBound="373.1">
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Const_SingleINvLine" />
                                            <om:Property Name="Signal" Value="True" />
                                            <om:Element Type="MessageAssignment" OID="04f0360a-76cc-4285-be5b-1fbcceb4ae5e" ParentLink="ComplexStatement_Statement" LowerBound="368.1" HigherBound="372.1">
                                                <om:Property Name="Expression" Value="varInvLineLoopCounter = varInvLineLoopCounter + 1;&#xD;&#xA;varInvLineLoopItem = varInvLineLoopCounter.ToString();&#xD;&#xA;msgInvoiceLine = xpath(msgInternalXML,&quot;/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine'][&quot;+ varInvLineLoopItem +&quot;]&quot;);" />
                                                <om:Property Name="ReportToAnalyst" Value="False" />
                                                <om:Property Name="Name" Value="MessageAssignment_1" />
                                                <om:Property Name="Signal" Value="False" />
                                            </om:Element>
                                            <om:Element Type="MessageRef" OID="c8bbba1b-793b-47a0-aef4-485b53d4a309" ParentLink="Construct_MessageRef" LowerBound="366.51" HigherBound="366.65">
                                                <om:Property Name="Ref" Value="msgInvoiceLine" />
                                                <om:Property Name="ReportToAnalyst" Value="True" />
                                                <om:Property Name="Signal" Value="False" />
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type="VariableAssignment" OID="278d99c8-3f3d-457c-a11a-e8bb1d3e56be" ParentLink="ComplexStatement_Statement" LowerBound="373.1" HigherBound="416.1">
                                            <om:Property Name="Expression" Value="//varInvoiceID = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='StandardBusinessDocumentHeader']/*[local-name()='DocumentIdentification']/*[local-name()='InstanceIdentifier'])&quot;);&#xD;&#xA;varLineId = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='ID'])&quot;);&#xD;&#xA;varOrderLineRefId = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='OrderLineReference']/*[local-name()='LineID'])&quot;);&#xD;&#xA;varLineQty = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='InvoicedQuantity'])&quot;);&#xD;&#xA;varLineAmount = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='LineExtensionAmount'])&quot;);&#xD;&#xA;varTaxId = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Item']/*[local-name()='ClassifiedTaxCategory']/*[local-name()='ID'])&quot;);&#xD;&#xA;varTaxPercent = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Item']/*[local-name()='ClassifiedTaxCategory']/*[local-name()='Percent'])&quot;);&#xD;&#xA;varTaxSchemeName = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Item']/*[local-name()='ClassifiedTaxCategory']/*[local-name()='TaxScheme']/*[local-name()='ID'])&quot;);&#xD;&#xA;varUnitPrice = xpath(msgInternalXML,&quot;string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Price']/*[local-name()='PriceAmount'])&quot;);&#xD;&#xA;&#xD;&#xA;if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;ShowAdminLogs&quot;)) == &quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msgPeppolXML;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgpeppolxml&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgpeppolxml&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msgInternalXML;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInternalXML&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInternalXML&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;InvoiceID&quot;,varInvoiceID);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;LineId&quot;,varLineId);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;OrderLineRefId&quot;,varOrderLineRefId);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;LineQty&quot;,varLineQty);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;LineAmount&quot;,varLineAmount);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;TaxId&quot;,varTaxId);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;TaxPercent&quot;,varTaxPercent);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;TaxSchemeName&quot;,varTaxSchemeName);&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;UnitPrice&quot;,varUnitPrice);&#xD;&#xA;}&#xD;&#xA;" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Assign_var" />
                                            <om:Property Name="Signal" Value="True" />
                                        </om:Element>
                                        <om:Element Type="Construct" OID="524a37b6-095e-4eac-a013-3001e3a7b697" ParentLink="ComplexStatement_Statement" LowerBound="416.1" HigherBound="424.1">
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Const_Item_Validate" />
                                            <om:Property Name="Signal" Value="True" />
                                            <om:Element Type="MessageAssignment" OID="a3e62cac-89f5-44a5-9044-63739782e5a4" ParentLink="ComplexStatement_Statement" LowerBound="419.1" HigherBound="423.1">
                                                <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfacePCFPeppolItemValidation xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:ID&gt;&quot; + varInvoiceID + &quot;&lt;/ns0:ID&gt;&lt;ns0:LineId&gt;&quot; + varLineId + &quot;&lt;/ns0:LineId&gt;&lt;ns0:OrderRefLineId&gt;&quot; + varOrderLineRefId + &quot;&lt;/ns0:OrderRefLineId&gt;&lt;ns0:LineQty&gt;&quot; + varLineQty + &quot;&lt;/ns0:LineQty&gt;&lt;ns0:LineAmount&gt;&quot; + varLineAmount + &quot;&lt;/ns0:LineAmount&gt;&lt;ns0:TaxId&gt;&quot; + varTaxId + &quot;&lt;/ns0:TaxId&gt;&lt;ns0:TaxPercent&gt;&quot; + varTaxPercent + &quot;&lt;/ns0:TaxPercent&gt;&lt;ns0:TaxSchemeName&gt;&quot; + varTaxSchemeName + &quot;&lt;/ns0:TaxSchemeName&gt;&lt;ns0:UnitPrice&gt;&quot; + varUnitPrice + &quot;&lt;/ns0:UnitPrice&gt;&lt;ns0:isMultipleGRN&gt;&quot; + isMultipleGRN + &quot;&lt;/ns0:isMultipleGRN&gt;&lt;/ns0:InterfacePCFPeppolItemValidation&gt;&quot;);&#xD;&#xA;msguspItemValidateReq = varTempXML;&#xD;&#xA;" />
                                                <om:Property Name="ReportToAnalyst" Value="False" />
                                                <om:Property Name="Name" Value="MessageAssignment_5" />
                                                <om:Property Name="Signal" Value="True" />
                                            </om:Element>
                                            <om:Element Type="MessageRef" OID="b7e5b1b1-9193-4b4c-9560-20ada7289bd3" ParentLink="Construct_MessageRef" LowerBound="417.51" HigherBound="417.72">
                                                <om:Property Name="Ref" Value="msguspItemValidateReq" />
                                                <om:Property Name="ReportToAnalyst" Value="True" />
                                                <om:Property Name="Signal" Value="False" />
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type="Send" OID="95d28c9c-2884-4800-b2d9-71e430525b1b" ParentLink="ComplexStatement_Statement" LowerBound="424.1" HigherBound="426.1">
                                            <om:Property Name="PortName" Value="Port_SndRcvPCFPeppolItemValidate" />
                                            <om:Property Name="MessageName" Value="msguspItemValidateReq" />
                                            <om:Property Name="OperationName" Value="Operation_1" />
                                            <om:Property Name="OperationMessageName" Value="Request" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Snd_Item_Validate" />
                                            <om:Property Name="Signal" Value="True" />
                                        </om:Element>
                                        <om:Element Type="Receive" OID="33e83685-abc6-4081-9657-fade8cb7208f" ParentLink="ComplexStatement_Statement" LowerBound="426.1" HigherBound="428.1">
                                            <om:Property Name="Activate" Value="False" />
                                            <om:Property Name="PortName" Value="Port_SndRcvPCFPeppolItemValidate" />
                                            <om:Property Name="MessageName" Value="msguspItemValidateResp" />
                                            <om:Property Name="OperationName" Value="Operation_1" />
                                            <om:Property Name="OperationMessageName" Value="Response" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Rcv_Item_Validate" />
                                            <om:Property Name="Signal" Value="True" />
                                        </om:Element>
                                        <om:Element Type="VariableAssignment" OID="c1df02ed-4d8c-4d2e-a4d4-8bf8ff75c664" ParentLink="ComplexStatement_Statement" LowerBound="428.1" HigherBound="435.1">
                                            <om:Property Name="Expression" Value="//Do not update response status if already any item is failed&#xD;&#xA;if((varItemValidateRespStatus == &quot;&quot;) || (varItemValidateRespStatus == &quot;true&quot;))&#xD;&#xA;{&#xD;&#xA;    varItemValidateRespStatus = xpath(msguspItemValidateResp,&quot;string(/*[local-name()='InterfacePCFPeppolItemValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation']/*[local-name()='resStatus' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation'])&quot;);&#xD;&#xA;    varItemValidateRespmsg = xpath(msguspItemValidateResp,&quot;string(/*[local-name()='InterfacePCFPeppolItemValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation']/*[local-name()='resDescription' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation'])&quot;);&#xD;&#xA;}" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="ItemValidationResp" />
                                            <om:Property Name="Signal" Value="True" />
                                        </om:Element>
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="Decision" OID="e28d0653-662e-4d64-976b-e88b3a3a3c22" ParentLink="ComplexStatement_Statement" LowerBound="438.1" HigherBound="569.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Chk_Item_Validate" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="DecisionBranch" OID="c61c56cb-c4ab-4d65-ac17-6c90bcfe5123" ParentLink="ReallyComplexStatement_Branch" LowerBound="439.29" HigherBound="564.1">
                                        <om:Property Name="Expression" Value="varItemValidateRespStatus == &quot;true&quot;" />
                                        <om:Property Name="IsGhostBranch" Value="True" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Name" Value="If_Success" />
                                        <om:Property Name="Signal" Value="False" />
                                        <om:Element Type="VariableAssignment" OID="6ade3d41-1ab8-469f-adfe-6628257c7bc4" ParentLink="ComplexStatement_Statement" LowerBound="441.1" HigherBound="443.1">
                                            <om:Property Name="Expression" Value="varAttachSizeLimit = System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;AttachmentSizeLimitMB&quot;));" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="AttachSizeLimit" />
                                            <om:Property Name="Signal" Value="True" />
                                        </om:Element>
                                        <om:Element Type="While" OID="0592cb31-5592-4950-b7ab-832741a46b34" ParentLink="ComplexStatement_Statement" LowerBound="443.1" HigherBound="542.1">
                                            <om:Property Name="Expression" Value="varAttachmentLoopCounter &lt; varAttachmentsCount" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Loop_Each_Attachment" />
                                            <om:Property Name="Signal" Value="False" />
                                            <om:Element Type="Scope" OID="414c1ba3-010d-468b-940c-f97d77b27b51" ParentLink="ComplexStatement_Statement" LowerBound="446.1" HigherBound="541.1">
                                                <om:Property Name="InitializedTransactionType" Value="True" />
                                                <om:Property Name="IsSynchronized" Value="False" />
                                                <om:Property Name="ReportToAnalyst" Value="True" />
                                                <om:Property Name="Name" Value="Scope_1" />
                                                <om:Property Name="Signal" Value="True" />
                                                <om:Element Type="Construct" OID="1cf2a576-0f8e-4618-b57f-82b473449059" ParentLink="ComplexStatement_Statement" LowerBound="451.1" HigherBound="460.1">
                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                    <om:Property Name="Name" Value="Const_SingleAttachment" />
                                                    <om:Property Name="Signal" Value="True" />
                                                    <om:Element Type="MessageAssignment" OID="b52a555a-7a3a-41a7-986f-de778270c304" ParentLink="ComplexStatement_Statement" LowerBound="454.1" HigherBound="459.1">
                                                        <om:Property Name="Expression" Value="varAttachmentLoopCounter = varAttachmentLoopCounter + 1;&#xD;&#xA;varAttachmentLoopItem = varAttachmentLoopCounter.ToString();&#xD;&#xA;msgSingleAttachment = xpath(msgInternalXML,&quot;/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='AdditionalDocumentReference'][&quot;+ varAttachmentLoopItem +&quot;]&quot;);&#xD;&#xA;varBase64Code = msgSingleAttachment.Attachment.EmbeddedDocumentBinaryObject;&#xD;&#xA;" />
                                                        <om:Property Name="ReportToAnalyst" Value="False" />
                                                        <om:Property Name="Name" Value="MessageAssignment_1" />
                                                        <om:Property Name="Signal" Value="True" />
                                                    </om:Element>
                                                    <om:Element Type="MessageRef" OID="2db407af-974a-4eb6-bad5-1043d6def363" ParentLink="Construct_MessageRef" LowerBound="452.55" HigherBound="452.74">
                                                        <om:Property Name="Ref" Value="msgSingleAttachment" />
                                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                                        <om:Property Name="Signal" Value="False" />
                                                    </om:Element>
                                                </om:Element>
                                                <om:Element Type="VariableAssignment" OID="b5d5117b-678d-4cf5-a06a-f8d822ac7811" ParentLink="ComplexStatement_Statement" LowerBound="460.1" HigherBound="488.1">
                                                    <om:Property Name="Expression" Value="if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;ShowAdminLogs&quot;)) == &quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msgSingleAttachment;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSingleAttachment&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSingleAttachment&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;varBase64sizeInBytes = 0;&#xD;&#xA;varBase64sizeInKb = 0;&#xD;&#xA;varBase64Length = varBase64Code.Length;&#xD;&#xA;if(varBase64Length &gt; 0)&#xD;&#xA;{&#xD;&#xA;    varBase64sizeInBytes = 4 * (System.Math.Ceiling((System.Double)varBase64Length / 3)*0.5624896334383812);&#xD;&#xA;    varBase64sizeInKb = (varBase64sizeInBytes/1000);&#xD;&#xA;}&#xD;&#xA;if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;ShowAdminLogs&quot;)) == &quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varBase64Length&quot;,varBase64Length.ToString());&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varBase64sizeInBytes&quot;,varBase64sizeInBytes.ToString());&#xD;&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varBase64sizeInKb&quot;,varBase64sizeInKb.ToString());&#xD;&#xA;}" />
                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                    <om:Property Name="Name" Value="PrintLogs" />
                                                    <om:Property Name="Signal" Value="True" />
                                                </om:Element>
                                                <om:Element Type="Decision" OID="4705925a-d423-4b77-9d4c-05914c296296" ParentLink="ComplexStatement_Statement" LowerBound="488.1" HigherBound="539.1">
                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                    <om:Property Name="Name" Value="Chk_Attachment_Size" />
                                                    <om:Property Name="Signal" Value="True" />
                                                    <om:Element Type="DecisionBranch" OID="981095a2-47c4-4bd6-839b-19de0cef53a5" ParentLink="ReallyComplexStatement_Branch" LowerBound="489.45" HigherBound="533.1">
                                                        <om:Property Name="Expression" Value="varBase64sizeInKb &lt; System.Convert.ToInt32(varAttachSizeLimit)" />
                                                        <om:Property Name="IsGhostBranch" Value="True" />
                                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                                        <om:Property Name="Name" Value="If&lt;SSO_Size" />
                                                        <om:Property Name="Signal" Value="False" />
                                                        <om:Element Type="Construct" OID="e085178a-2184-460b-b2d2-908918c04cef" ParentLink="ComplexStatement_Statement" LowerBound="491.1" HigherBound="497.1">
                                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                                            <om:Property Name="Name" Value="XMLAttach_To_uspReq" />
                                                            <om:Property Name="Signal" Value="True" />
                                                            <om:Element Type="Transform" OID="8cd18dc5-c6f1-46b3-bc87-b80e6c87505f" ParentLink="ComplexStatement_Statement" LowerBound="494.1" HigherBound="496.1">
                                                                <om:Property Name="ClassName" Value="Sp.PCFPeppol.Transforms.Map_PeppolAttachment_uspReq" />
                                                                <om:Property Name="ReportToAnalyst" Value="True" />
                                                                <om:Property Name="Name" Value="Transform_2" />
                                                                <om:Property Name="Signal" Value="True" />
                                                                <om:Element Type="MessagePartRef" OID="a62b2e58-d44f-409e-ba2d-e8e2b98f40a7" ParentLink="Transform_InputMessagePartRef" LowerBound="495.136" HigherBound="495.155">
                                                                    <om:Property Name="MessageRef" Value="msgSingleAttachment" />
                                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                                    <om:Property Name="Name" Value="MessagePartReference_3" />
                                                                    <om:Property Name="Signal" Value="False" />
                                                                </om:Element>
                                                                <om:Element Type="MessagePartRef" OID="7b524a59-b5dd-4a72-b47f-97bcdd23bd95" ParentLink="Transform_OutputMessagePartRef" LowerBound="495.64" HigherBound="495.79">
                                                                    <om:Property Name="MessageRef" Value="msguspAttachReq" />
                                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                                    <om:Property Name="Name" Value="MessagePartReference_4" />
                                                                    <om:Property Name="Signal" Value="False" />
                                                                </om:Element>
                                                            </om:Element>
                                                            <om:Element Type="MessageRef" OID="b03e6509-8e35-4aae-8144-6809d20efa38" ParentLink="Construct_MessageRef" LowerBound="492.59" HigherBound="492.74">
                                                                <om:Property Name="Ref" Value="msguspAttachReq" />
                                                                <om:Property Name="ReportToAnalyst" Value="True" />
                                                                <om:Property Name="Signal" Value="False" />
                                                            </om:Element>
                                                        </om:Element>
                                                        <om:Element Type="VariableAssignment" OID="196d751f-c21e-459e-ad51-f411487d0deb" ParentLink="ComplexStatement_Statement" LowerBound="497.1" HigherBound="511.1">
                                                            <om:Property Name="Expression" Value="if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;ShowAdminLogs&quot;)) == &quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;    varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;    varTempXML = msguspAttachReq;&#xD;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspAttachReq&quot;,varTempXML.OuterXml);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspAttachReq&quot;,varTempXML.OuterXml.Substring(1,29500));&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;" />
                                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                                            <om:Property Name="Name" Value="Assign_var" />
                                                            <om:Property Name="Signal" Value="False" />
                                                        </om:Element>
                                                        <om:Element Type="Send" OID="28d85f1b-8519-4f47-af5e-da6284487e0c" ParentLink="ComplexStatement_Statement" LowerBound="511.1" HigherBound="513.1">
                                                            <om:Property Name="PortName" Value="Port_SndRcvPCFPeppolAttachment" />
                                                            <om:Property Name="MessageName" Value="msguspAttachReq" />
                                                            <om:Property Name="OperationName" Value="Operation_1" />
                                                            <om:Property Name="OperationMessageName" Value="Request" />
                                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                                            <om:Property Name="Name" Value="Send_1" />
                                                            <om:Property Name="Signal" Value="True" />
                                                        </om:Element>
                                                        <om:Element Type="Receive" OID="d593757e-3e30-4b0a-825b-cf02cc490e54" ParentLink="ComplexStatement_Statement" LowerBound="513.1" HigherBound="515.1">
                                                            <om:Property Name="Activate" Value="False" />
                                                            <om:Property Name="PortName" Value="Port_SndRcvPCFPeppolAttachment" />
                                                            <om:Property Name="MessageName" Value="msguspAttachResp" />
                                                            <om:Property Name="OperationName" Value="Operation_1" />
                                                            <om:Property Name="OperationMessageName" Value="Response" />
                                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                                            <om:Property Name="Name" Value="Receive_2" />
                                                            <om:Property Name="Signal" Value="True" />
                                                        </om:Element>
                                                        <om:Element Type="VariableAssignment" OID="04ebcd6c-9aa6-4ce9-ab98-b70fb84bd50c" ParentLink="ComplexStatement_Statement" LowerBound="515.1" HigherBound="532.1">
                                                            <om:Property Name="Expression" Value="&#xD;&#xA;//Do not update response status if already any item is failed&#xD;&#xA;if((varAttachRespStatus == &quot;&quot;) || (varAttachRespStatus == &quot;true&quot;))&#xD;&#xA;{&#xD;&#xA;    varAttachIDResp = xpath(msguspAttachResp,&quot;string(/*[local-name()='InterfacePCFPeppolAttachmentResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/*[local-name()='ID' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/text())&quot;);    &#xD;&#xA;    varAttachRespStatus = xpath(msguspAttachResp,&quot;string(/*[local-name()='InterfacePCFPeppolAttachmentResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/*[local-name()='resStatus' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment'])&quot;);&#xD;&#xA;    varAttachRespMsg = xpath(msguspAttachResp,&quot;string(/*[local-name()='InterfacePCFPeppolAttachmentResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/*[local-name()='resDescription' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment'])&quot;);&#xD;&#xA;    if(varAttachmentID == &quot;&quot;)&#xD;&#xA;    {&#xD;&#xA;        varAttachmentID =  varAttachIDResp;&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        varAttachmentID =  varAttachmentID + &quot;,&quot; + varAttachIDResp;&#xD;&#xA;    }&#xD;&#xA;}" />
                                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                                            <om:Property Name="Name" Value="AttachResponse" />
                                                            <om:Property Name="Signal" Value="False" />
                                                        </om:Element>
                                                    </om:Element>
                                                    <om:Element Type="DecisionBranch" OID="d0875d19-65e3-4008-905f-cfb863657707" ParentLink="ReallyComplexStatement_Branch">
                                                        <om:Property Name="IsGhostBranch" Value="True" />
                                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                                        <om:Property Name="Name" Value="Else" />
                                                        <om:Property Name="Signal" Value="False" />
                                                        <om:Element Type="VariableAssignment" OID="fbb2337b-6788-4ffb-a8e2-e0f235d4aa90" ParentLink="ComplexStatement_Statement" LowerBound="535.1" HigherBound="538.1">
                                                            <om:Property Name="Expression" Value="varAttachRespStatus = &quot;false&quot;;&#xD;&#xA;varAttachRespMsg = varAttachRespMsg + &quot;Attachment size exceeds 10MB&quot;;" />
                                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                                            <om:Property Name="Name" Value="AttachResponse" />
                                                            <om:Property Name="Signal" Value="False" />
                                                        </om:Element>
                                                    </om:Element>
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type="Decision" OID="e15a1ae7-5372-496e-aa5c-0a9d99ed52ed" ParentLink="ComplexStatement_Statement" LowerBound="542.1" HigherBound="563.1">
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Chk_Attach_Process" />
                                            <om:Property Name="Signal" Value="True" />
                                            <om:Element Type="DecisionBranch" OID="f77a4fc7-5bb8-4237-9943-e55978abdbdd" ParentLink="ReallyComplexStatement_Branch" LowerBound="543.33" HigherBound="558.1">
                                                <om:Property Name="Expression" Value="varAttachRespStatus == &quot;true&quot;" />
                                                <om:Property Name="IsGhostBranch" Value="True" />
                                                <om:Property Name="ReportToAnalyst" Value="True" />
                                                <om:Property Name="Name" Value="Success" />
                                                <om:Property Name="Signal" Value="False" />
                                                <om:Element Type="Construct" OID="10c0ea78-f465-416e-be9b-c2c012f3beb9" ParentLink="ComplexStatement_Statement" LowerBound="545.1" HigherBound="553.1">
                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                    <om:Property Name="Name" Value="Const_GRNInvoice" />
                                                    <om:Property Name="Signal" Value="True" />
                                                    <om:Element Type="MessageAssignment" OID="4015da05-4c80-4632-b2d8-ddf0d030bc88" ParentLink="ComplexStatement_Statement" LowerBound="548.1" HigherBound="552.1">
                                                        <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfacePCFPeppolGRNInvoice xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:ID&gt;&quot; + varInvoiceID + &quot;&lt;/ns0:ID&gt;&lt;ns0:AttachmentID&gt;&quot; + varAttachmentID + &quot;&lt;/ns0:AttachmentID&gt;&lt;/ns0:InterfacePCFPeppolGRNInvoice&gt;&quot;);&#xD;&#xA;msgGRNInvoicereq = varTempXML;" />
                                                        <om:Property Name="ReportToAnalyst" Value="False" />
                                                        <om:Property Name="Name" Value="MessageAssignment_4" />
                                                        <om:Property Name="Signal" Value="True" />
                                                    </om:Element>
                                                    <om:Element Type="MessageRef" OID="f0d68fa9-b9c1-40e3-bc13-57b3d2825c1e" ParentLink="Construct_MessageRef" LowerBound="546.47" HigherBound="546.63">
                                                        <om:Property Name="Ref" Value="msgGRNInvoicereq" />
                                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                                        <om:Property Name="Signal" Value="False" />
                                                    </om:Element>
                                                </om:Element>
                                                <om:Element Type="Send" OID="e9b4d68b-7d7e-4380-ba85-26abab8fb1ce" ParentLink="ComplexStatement_Statement" LowerBound="553.1" HigherBound="555.1">
                                                    <om:Property Name="PortName" Value="Port_SndRcvGRNInvoice" />
                                                    <om:Property Name="MessageName" Value="msgGRNInvoicereq" />
                                                    <om:Property Name="OperationName" Value="Operation_1" />
                                                    <om:Property Name="OperationMessageName" Value="Request" />
                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                    <om:Property Name="Name" Value="Send_4" />
                                                    <om:Property Name="Signal" Value="True" />
                                                </om:Element>
                                                <om:Element Type="Receive" OID="6913b2ac-7448-4e84-ac64-4d0399b371d0" ParentLink="ComplexStatement_Statement" LowerBound="555.1" HigherBound="557.1">
                                                    <om:Property Name="Activate" Value="False" />
                                                    <om:Property Name="PortName" Value="Port_SndRcvGRNInvoice" />
                                                    <om:Property Name="MessageName" Value="msgGRNInvoiceresp" />
                                                    <om:Property Name="OperationName" Value="Operation_1" />
                                                    <om:Property Name="OperationMessageName" Value="Response" />
                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                    <om:Property Name="Name" Value="Receive_3" />
                                                    <om:Property Name="Signal" Value="True" />
                                                </om:Element>
                                            </om:Element>
                                            <om:Element Type="DecisionBranch" OID="099a7e85-3899-4e6a-b543-3ed78c61a2a4" ParentLink="ReallyComplexStatement_Branch">
                                                <om:Property Name="IsGhostBranch" Value="True" />
                                                <om:Property Name="ReportToAnalyst" Value="True" />
                                                <om:Property Name="Name" Value="Else" />
                                                <om:Property Name="Signal" Value="False" />
                                                <om:Element Type="VariableAssignment" OID="e2265ec2-43dd-4ac3-83f2-d112a187b0c0" ParentLink="ComplexStatement_Statement" LowerBound="560.1" HigherBound="562.1">
                                                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;PCFPeppolAttachmentException&quot;,varAttachRespMsg);&#xD;&#xA;" />
                                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                                    <om:Property Name="Name" Value="Print_Exception" />
                                                    <om:Property Name="Signal" Value="True" />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type="DecisionBranch" OID="152cbe29-843f-4b32-bbf1-fbd41934daf3" ParentLink="ReallyComplexStatement_Branch">
                                        <om:Property Name="IsGhostBranch" Value="True" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Name" Value="Else" />
                                        <om:Property Name="Signal" Value="False" />
                                        <om:Element Type="VariableAssignment" OID="04359f47-8fb6-4944-a59a-be140ca9d006" ParentLink="ComplexStatement_Statement" LowerBound="566.1" HigherBound="568.1">
                                            <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;PCFPeppolItemValidationException&quot;,varItemValidateRespmsg);&#xD;&#xA;" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="Print_Exception" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                    </om:Element>
                                </om:Element>
                            </om:Element>
                            <om:Element Type="DecisionBranch" OID="79d68044-11f4-403c-ae3f-f804c187f7ae" ParentLink="ReallyComplexStatement_Branch">
                                <om:Property Name="IsGhostBranch" Value="True" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Else" />
                                <om:Property Name="Signal" Value="False" />
                                <om:Element Type="VariableAssignment" OID="9facf2cd-277a-4a25-818d-230bc95d1681" ParentLink="ComplexStatement_Statement" LowerBound="572.1" HigherBound="574.1">
                                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;PCFPeppolHeadStoredProcResp&quot;,varHeadValidateRespmsg);" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Print_Exception" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type="Catch" OID="5af23531-863f-4aff-96cd-b5d2fd4f138a" ParentLink="Scope_Catch" LowerBound="578.1" HigherBound="630.1">
                            <om:Property Name="ExceptionName" Value="ex" />
                            <om:Property Name="ExceptionType" Value="System.Exception" />
                            <om:Property Name="IsFaultMessage" Value="False" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="System.Exception" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="Construct" OID="ced2e284-f63e-4f8b-89cf-9e070df27672" ParentLink="Catch_Statement" LowerBound="581.1" HigherBound="597.1">
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="const_ErrorLogsTable" />
                                <om:Property Name="Signal" Value="True" />
                                <om:Element Type="MessageRef" OID="17b8f817-6d57-4923-8318-0ac181f46fcb" ParentLink="Construct_MessageRef" LowerBound="582.39" HigherBound="582.51">
                                    <om:Property Name="Ref" Value="msgErrorLogs" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="MessageAssignment" OID="e3f73e14-486f-44eb-a691-3f8e8aa49e17" ParentLink="ComplexStatement_Statement" LowerBound="584.1" HigherBound="596.1">
                                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;PeppolToPCFException&quot;,ex.Message);&#xD;&#xA;varExceptionmsg = ex.Message;&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;&amp;&quot;,&quot;&amp;amp;&quot;);&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;'&quot;,&quot;''&quot;);&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;&lt;&quot;,&quot;&amp;lt;&quot;);&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;&gt;&quot;,&quot;&amp;gt;&quot;);&#xD;&#xA;varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfaceErrorLogs xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:HubID&gt;PCFPeppol&lt;/ns0:HubID&gt;&lt;ns0:DocumentID&gt;&quot; + varInvoiceID + &quot;&lt;/ns0:DocumentID&gt;&lt;ns0:DocumentType&gt;PCFPeppol&lt;/ns0:DocumentType&gt;&lt;ns0:DocumentNumber&gt;&quot; + varInvoiceID + &quot;&lt;/ns0:DocumentNumber&gt;&lt;ns0:ModuleName&gt;Process_Peppol_To_PCFDB&lt;/ns0:ModuleName&gt;&lt;ns0:ExceptionType&gt;&quot; + ex.Source + &quot;&lt;/ns0:ExceptionType&gt;&lt;ns0:ErrorMessage&gt;&quot; + varExceptionmsg + &quot;&lt;/ns0:ErrorMessage&gt;&lt;ns0:VendorCode&gt;-&lt;/ns0:VendorCode&gt;&lt;ns0:DocumentPath&gt;-&lt;/ns0:DocumentPath&gt;&lt;/ns0:InterfaceErrorLogs&gt;&quot;);&#xD;&#xA;&#xD;&#xA;msgErrorLogs.Body = varTempXML;&#xD;&#xA;&#xD;&#xA;" />
                                    <om:Property Name="ReportToAnalyst" Value="False" />
                                    <om:Property Name="Name" Value="MessageAssignment_3" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                            </om:Element>
                            <om:Element Type="Send" OID="2ead8a53-b98c-404c-ba78-1696d2ac94d5" ParentLink="Catch_Statement" LowerBound="597.1" HigherBound="599.1">
                                <om:Property Name="PortName" Value="Port_SndPeppolToPCFErrorLogs" />
                                <om:Property Name="MessageName" Value="msgErrorLogs" />
                                <om:Property Name="OperationName" Value="Operation_1" />
                                <om:Property Name="OperationMessageName" Value="Request" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Send_2" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="Construct" OID="6c712252-9a8c-4aa8-949b-95ea25c5784d" ParentLink="Catch_Statement" LowerBound="599.1" HigherBound="627.1">
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="ConstructMessage_2" />
                                <om:Property Name="Signal" Value="True" />
                                <om:Element Type="MessageAssignment" OID="feebcca7-3f91-4ae0-81f3-f7694c5e307b" ParentLink="ComplexStatement_Statement" LowerBound="602.1" HigherBound="626.1">
                                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;PeppolToPCFException&quot;,ex.Message);&#xD;&#xA;&#xD;&#xA;varEmailBody = new System.Text.StringBuilder();&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;html&gt;&lt;body&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;p&gt;PCF Peppol Invoice failed while processing in SESAMi.&lt;/p&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;p&gt;&lt;b&gt;&lt;u&gt;Error details:&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Application Name&lt;/b&gt; : &lt;i&gt;Sp.PCFPeppol&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Process Name&lt;/b&gt; : &lt;i&gt;Process_Peppol_To_PCFDB&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;InvoiceId&lt;/b&gt; : &lt;i&gt;&quot; + varInvoiceID + &quot;&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Failure Code&lt;/b&gt; : &quot; + ex.Source + &quot;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Error Description&lt;/b&gt; : &lt;i&gt;&quot; + ex.Message + &quot;&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;/body&gt;&lt;/html&gt;&quot;);&#xD;&#xA;msgErrorEmail.Body = new Sp.PCFPeppol.Common.RawString(varEmailBody.ToString());&#xD;&#xA;Sp.PCFPeppol.Common.SMTPUtils.SetContentType(msgErrorEmail.Body,&quot;text/html&quot;);&#xD;&#xA;Port_PeppolToPCFErrorEmail(Microsoft.XLANGs.BaseTypes.Address) = Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;SMTPTo&quot;);&#xD;&#xA;&#xD;&#xA;msgErrorEmail(SMTP.From) = Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;SMTPFrom&quot;);&#xD;&#xA;&#xD;&#xA;msgErrorEmail(SMTP.Subject) = &quot;PCFPeppol failed for Invoice: &quot; + varInvoiceID;&#xD;&#xA;&#xD;&#xA;msgErrorEmail(SMTP.EmailBodyFileCharset) = &quot;UTF-8&quot;;&#xD;&#xA;msgErrorEmail(SMTP.CC) = Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;SMTPCCopy&quot;);&#xD;&#xA;msgErrorEmail(SMTP.SMTPHost)= Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;SMTPHost&quot;);" />
                                    <om:Property Name="ReportToAnalyst" Value="False" />
                                    <om:Property Name="Name" Value="MessageAssignment_1" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="MessageRef" OID="24dc31d2-b49e-4f59-af2f-e637cf92de57" ParentLink="Construct_MessageRef" LowerBound="600.39" HigherBound="600.52">
                                    <om:Property Name="Ref" Value="msgErrorEmail" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                            </om:Element>
                            <om:Element Type="Send" OID="efd4a136-e517-40e2-b996-dde9200c74c5" ParentLink="Catch_Statement" LowerBound="627.1" HigherBound="629.1">
                                <om:Property Name="PortName" Value="Port_PeppolToPCFErrorEmail" />
                                <om:Property Name="MessageName" Value="msgErrorEmail" />
                                <om:Property Name="OperationName" Value="Operation_1" />
                                <om:Property Name="OperationMessageName" Value="Request" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Send_3" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type="Delay" OID="7c65718f-84b7-4600-940b-b89e6a12411a" ParentLink="ComplexStatement_Statement" LowerBound="632.1" HigherBound="634.1">
                        <om:Property Name="Timeout" Value="new System.TimeSpan(0,0,0,0,System.Convert.ToInt32(Sp.PCFPeppol.Common.SSOClientHelper.Read(&quot;Sp.PCFPeppol&quot;, &quot;DelayStep1&quot;)));" />
                        <om:Property Name="ReportToAnalyst" Value="True" />
                        <om:Property Name="Name" Value="Delay_SSO" />
                        <om:Property Name="Signal" Value="False" />
                    </om:Element>
                </om:Element>
                <om:Element Type="VariableAssignment" OID="20a23ad2-08ec-47d6-bfe8-a4107908e7f2" ParentLink="ServiceBody_Statement" LowerBound="635.1" HigherBound="637.1">
                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;PeppolToPCFDB Process Complete&quot;,&quot;PeppolToPCFDB Process Completed&quot;);" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Process_End" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="8cc69053-ae77-4b85-8de7-2023f4bf8ba7" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="56.1" HigherBound="58.1">
                <om:Property Name="PortModifier" Value="Implements" />
                <om:Property Name="Orientation" Value="Left" />
                <om:Property Name="PortIndex" Value="-1" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.PortType_RcvPollPCFPeppolDocIds" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_RcvPollPCFPeppolDocIds" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="4665e8e7-2419-4fcf-9ddc-a3740304d097" ParentLink="PortDeclaration_CLRAttribute" LowerBound="56.1" HigherBound="57.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="c9751a9a-7a18-42b1-a779-b9dd0a912532" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="58.1" HigherBound="61.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="47" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="Transmitted" />
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.PortType_SndRcvPCFPeppolHeadValidate" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndRcvPCFPeppolHeadValidate" />
                <om:Property Name="Signal" Value="True" />
                <om:Element Type="LogicalBindingAttribute" OID="87833bc5-f62c-44f5-ad17-6f233d7b5761" ParentLink="PortDeclaration_CLRAttribute" LowerBound="58.1" HigherBound="59.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="82bd2da0-656f-4e3d-a35f-f54c85f82031" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="61.1" HigherBound="63.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="303" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.PortType_PeppolToPCFErrorEmail" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_PeppolToPCFErrorEmail" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="PhysicalBindingAttribute" OID="48572c41-7052-4b97-b7d8-0a6d7492df61" ParentLink="PortDeclaration_CLRAttribute" LowerBound="61.1" HigherBound="62.1">
                    <om:Property Name="InPipeline" Value="Microsoft.BizTalk.DefaultPipelines.XMLReceive" />
                    <om:Property Name="OutPipeline" Value="Microsoft.BizTalk.DefaultPipelines.PassThruTransmit" />
                    <om:Property Name="TransportType" Value="HTTP" />
                    <om:Property Name="URI" Value="http://tempURI" />
                    <om:Property Name="IsDynamic" Value="True" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="7a402393-dcf2-4615-85f3-c853b642fca0" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="63.1" HigherBound="65.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="291" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.PortType_SndPeppolToPCFErrorLogs" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndPeppolToPCFErrorLogs" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="39d1bc71-9f83-4d39-bdcb-458e49d447be" ParentLink="PortDeclaration_CLRAttribute" LowerBound="63.1" HigherBound="64.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="42d32c28-229d-4c77-9c8b-156d280744f4" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="65.1" HigherBound="67.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="265" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.PortType_SndRcvGRNInvoice" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndRcvGRNInvoice" />
                <om:Property Name="Signal" Value="True" />
                <om:Element Type="LogicalBindingAttribute" OID="7e9fefd9-4846-4c7b-b442-6df2276bd7c2" ParentLink="PortDeclaration_CLRAttribute" LowerBound="65.1" HigherBound="66.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="1a390bf4-d3a0-46d9-8ae6-ca9aa426893e" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="67.1" HigherBound="69.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="160" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.PortType_SndRcvPCFPeppolItemValidate" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndRcvPCFPeppolItemValidate" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="91008792-c36c-4a9d-8631-5d46655d12b6" ParentLink="PortDeclaration_CLRAttribute" LowerBound="67.1" HigherBound="68.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="8876ffc9-556e-4245-bb5d-21f3d0fa82d3" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="69.1" HigherBound="71.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="249" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.PCFPeppol.Orchestrations.PortType_SndRcvPCFPeppolAttachment" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndRcvPCFPeppolAttachment" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="26fb5199-b81b-41b7-9e52-1d73f533c9c4" ParentLink="PortDeclaration_CLRAttribute" LowerBound="69.1" HigherBound="70.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
#endif // __DESIGNER_DATA
[Microsoft.XLANGs.BaseTypes.BPELExportable(false)]
module Sp.PCFPeppol.Orchestrations
{
    internal porttype PortType_RcvPollPCFPeppolDocIds
    {
        oneway Operation_1
        {
            Sp.PCFPeppol.Schemas.uspPCFPeppolPoll_TypedPolling_InterfacePCFPeppolPolling.TypedPolling
        };
    };
    internal porttype PortType_SndPeppolToPCFErrorLogs
    {
        oneway Operation_1
        {
            MultiErrorLogs
        };
    };
    internal porttype PortType_PeppolToPCFErrorEmail
    {
        oneway Operation_1
        {
            MultiErrorEmail
        };
    };
    internal porttype PortType_SndRcvGRNInvoice
    {
        requestresponse Operation_1
        {
            Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoice, Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoiceResponse
        };
    };
    internal porttype PortType_SndRcvPCFPeppolHeadValidate
    {
        requestresponse Operation_1
        {
            Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidation, Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidationResponse
        };
    };
    internal porttype PortType_SndRcvPCFPeppolItemValidate
    {
        requestresponse Operation_1
        {
            Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidation, Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidationResponse
        };
    };
    internal porttype PortType_SndRcvPCFPeppolAttachment
    {
        requestresponse Operation_1
        {
            Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachment, Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachmentResponse
        };
    };
    [Microsoft.XLANGs.BaseTypes.BPELExportable(false)]
    internal service Process_Peppol_To_PCFDB
    {
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port implements PortType_RcvPollPCFPeppolDocIds Port_RcvPollPCFPeppolDocIds;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        [Microsoft.XLANGs.BaseTypes.DeliveryNotification(Microsoft.XLANGs.BaseTypes.DeliveryNotification.NotificationLevel.Transmitted)]
        port uses PortType_SndRcvPCFPeppolHeadValidate Port_SndRcvPCFPeppolHeadValidate;
        [Microsoft.XLANGs.BaseTypes.PhysicalBinding(typeof(Microsoft.BizTalk.DefaultPipelines.PassThruTransmit))]
        port uses dynamic PortType_PeppolToPCFErrorEmail Port_PeppolToPCFErrorEmail;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndPeppolToPCFErrorLogs Port_SndPeppolToPCFErrorLogs;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndRcvGRNInvoice Port_SndRcvGRNInvoice;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndRcvPCFPeppolItemValidate Port_SndRcvPCFPeppolItemValidate;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndRcvPCFPeppolAttachment Port_SndRcvPCFPeppolAttachment;
        message Sp.PCFPeppol.Schemas.InvoiceLine msgInvoiceLine;
        message Sp.PCFPeppol.Schemas.PCFPeppolInternalXML msgInternalXML;
        message Sp.PCFPeppol.Schemas.PeppolInput msgPeppolXML;
        message MultiErrorLogs msgErrorLogs;
        message MultiErrorEmail msgErrorEmail;
        message Sp.PCFPeppol.Schemas.uspPCFPeppolPoll_TypedPolling_InterfacePCFPeppolPolling.TypedPolling msgPollDocIds;
        message Sp.PCFPeppol.Schemas.uspPCFPeppolPoll_TypedPolling_InterfacePCFPeppolPolling.TypedPollingResultSet0 msgSingleDocId;
        message Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoice msgGRNInvoicereq;
        message Sp.PCFPeppol.Schemas.uspPCFInvoiceGRN_TypedProcedure_dbo.InterfacePCFPeppolGRNInvoiceResponse msgGRNInvoiceresp;
        message Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidation msguspHeadValidateReq;
        message Sp.PCFPeppol.Schemas.uspHeadValidation_TypedProcedure_dbo.InterfacePCFPeppolHeaderValidationResponse msguspHeadValidateResp;
        message Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidation msguspItemValidateReq;
        message Sp.PCFPeppol.Schemas.uspPCFPeppolItemValidation_TypedProcedure_dbo.InterfacePCFPeppolItemValidationResponse msguspItemValidateResp;
        message Sp.PCFPeppol.Schemas.InvoiceAttachment msgSingleAttachment;
        message Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachment msguspAttachReq;
        message Sp.PCFPeppol.Schemas.uspPCFAttachment_TypedProcedure_dbo.InterfacePCFPeppolAttachmentResponse msguspAttachResp;
        System.Int32 varAttachmentLoopCounter;
        System.Int32 varAttachmentsCount;
        System.String varInvLineLoopItem;
        System.Int32 varGRNCount;
        System.String varGRNNumber;
        System.Int32 varInvoiceLineCount;
        System.String varPeppolXMLPath;
        System.String varItemValidateRespStatus;
        System.String varItemValidateRespmsg;
        System.String varExceptionmsg;
        System.Text.StringBuilder varEmailBody;
        System.Xml.XmlDocument varTempXML;
        System.Int32 varRecordCount;
        System.String varLoopItem;
        System.Int32 varLoopCounter;
        System.String varInvoiceID;
        System.String varHeadValidateRespStatus;
        System.String varHeadValidateRespmsg;
        System.Text.StringBuilder varUserEmailBody;
        System.String varLineId;
        System.String varLineQty;
        System.String varLineAmount;
        System.String varTaxId;
        System.String varTaxPercent;
        System.String varTaxSchemeName;
        System.String varUnitPrice;
        System.String isMultipleGRN;
        System.String varOrderLineRefId;
        System.Int32 varInvLineLoopCounter;
        System.String varOrderLineRef;
        System.String varAttachmentLoopItem;
        System.String varAttachmentPath;
        System.String varAttachRespStatus;
        System.String varAttachRespMsg;
        System.String varAttachmentID;
        System.String varAttachIDResp;
        System.String varBase64Code;
        System.Int32 varBase64Length;
        System.Double varBase64sizeInBytes;
        System.Double varBase64sizeInKb;
        System.String varAttachSizeLimit;
        body ()
        {
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("9e14cef5-87cf-4d10-8699-36d2a16c4aba")]
            activate receive (Port_RcvPollPCFPeppolDocIds.Operation_1, msgPollDocIds);
            varAttachmentLoopCounter = 0;
            varAttachmentsCount = 0;
            varInvLineLoopItem = "";
            varGRNCount = 0;
            varGRNNumber = "";
            varInvoiceLineCount = 0;
            varPeppolXMLPath = "";
            varItemValidateRespStatus = "";
            varItemValidateRespmsg = "";
            varExceptionmsg = "";
            varEmailBody = new System.Text.StringBuilder();
            varTempXML = new System.Xml.XmlDocument();
            varLoopItem = "";
            varLoopCounter = 0;
            varInvoiceID = "";
            varHeadValidateRespStatus = "";
            varHeadValidateRespmsg = "";
            varUserEmailBody = new System.Text.StringBuilder();
            varLineId = "";
            varLineQty = "";
            varLineAmount = "";
            varTaxId = "";
            varTaxPercent = "";
            varTaxSchemeName = "";
            varUnitPrice = "";
            isMultipleGRN = "";
            varOrderLineRefId = "";
            varInvLineLoopCounter = 0;
            varOrderLineRef = "";
            varAttachmentLoopItem = "";
            varAttachmentPath = "";
            varAttachRespStatus = "";
            varAttachRespMsg = "";
            varAttachmentID = "";
            varAttachIDResp = "";
            varBase64Code = "";
            varBase64Length = 0;
            varBase64sizeInBytes = 0;
            varBase64sizeInKb = 0;
            varAttachSizeLimit = "";
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("e105a5e3-28d6-4a2c-95bf-fcc091e0434a")]
            System.Diagnostics.EventLog.WriteEntry("PeppolToPCFDB Process Start","PeppolToPCFDB Process Started");
            varRecordCount = System.Convert.ToInt32(xpath(msgPollDocIds,"count(/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='Id' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling'])"));
            System.Diagnostics.EventLog.WriteEntry("PCFPeppolInvoiceCount",varRecordCount.ToString());
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("46bd182a-2b1b-48e9-88d4-6a53f40ee737")]
            while (varLoopCounter < varRecordCount)
            {
                [Microsoft.XLANGs.BaseTypes.DesignerPosition("a8d1df65-7e2b-4716-9453-fd6018a277e6")]
                scope
                {
                    body
                    {
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("0b962fdd-9939-4f5c-aaed-573fc0a785e1")]
                        varHeadValidateRespStatus = "";
                        varItemValidateRespStatus = "";
                        varAttachmentsCount = 0;
                        varAttachmentLoopCounter = 0;
                        varInvLineLoopCounter = 0;
                        varAttachmentLoopItem = "";
                        varInvLineLoopItem = "";
                        varAttachRespStatus = "";
                        varBase64Code = "";
                        varBase64Length = 0;
                        varBase64sizeInBytes = 0;
                        varBase64sizeInKb = 0;
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("b482115c-d3ef-4a60-bd7a-4068ac390ad5")]
                        construct msgSingleDocId
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("9674e6e6-0694-4bec-ba10-979ef97f1b2a")]
                            varLoopCounter = varLoopCounter + 1;
                            varLoopItem = varLoopCounter.ToString();
                            
                            msgSingleDocId = xpath(msgPollDocIds,"/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfacePCFPeppolPolling']["+ varLoopItem +"]");
                            
                            varInvoiceID = msgSingleDocId.Id;
                            varPeppolXMLPath = msgSingleDocId.PeppolXMLPath;
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("9c4965c7-514d-47cb-a74c-66c9f048da4a")]
                        if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "ShowAdminLogs")) == "Yes")
                        {
                            System.Diagnostics.EventLog.WriteEntry("InvoiceID",varInvoiceID);
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgPollDocIds;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgPollDocIds",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgPollDocIds",varTempXML.OuterXml.Substring(1,29500));
                            }
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgSingleDocId;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgSingleDocId",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgSingleDocId",varTempXML.OuterXml.Substring(1,29500));
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("be59f2ba-2086-474d-a8c3-ad18915c2d40")]
                        scope
                        {
                            body
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("5e420ccf-f58b-4463-b8b6-4ca22d0e7cb0")]
                                construct msguspHeadValidateReq
                                {
                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("4f209ee1-0dd2-42d3-958e-dcbe641326e3")]
                                    varTempXML = new System.Xml.XmlDocument();
                                    varTempXML.LoadXml("<ns0:InterfacePCFPeppolHeaderValidation xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:ID>" + varInvoiceID + "</ns0:ID></ns0:InterfacePCFPeppolHeaderValidation>");
                                    msguspHeadValidateReq = varTempXML;
                                }
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("f8bb9c04-9673-446f-a519-2d5bb87d024f")]
                                send (Port_SndRcvPCFPeppolHeadValidate.Operation_1, msguspHeadValidateReq);
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("98e21be1-8af9-4744-b0c1-2e1a7d3849f0")]
                                receive (Port_SndRcvPCFPeppolHeadValidate.Operation_1, msguspHeadValidateResp);
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("94ebcc46-8355-42ba-b594-d07ed2b42702")]
                                if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "ShowAdminLogs")) == "Yes")
                                {
                                    varTempXML = new System.Xml.XmlDocument();
                                    varTempXML = msguspHeadValidateReq;
                                    if(varTempXML.OuterXml.Length < 30000)
                                    {
                                        System.Diagnostics.EventLog.WriteEntry("msguspHeadValidateReq",varTempXML.OuterXml);
                                    }
                                    else
                                    {
                                        System.Diagnostics.EventLog.WriteEntry("msguspHeadValidateReq",varTempXML.OuterXml.Substring(1,29500));
                                    }
                                    varTempXML = new System.Xml.XmlDocument();
                                    varTempXML = msguspHeadValidateResp;
                                    if(varTempXML.OuterXml.Length < 30000)
                                    {
                                        System.Diagnostics.EventLog.WriteEntry("msguspHeadValidateResp",varTempXML.OuterXml);
                                    }
                                    else
                                    {
                                        System.Diagnostics.EventLog.WriteEntry("msguspHeadValidateResp",varTempXML.OuterXml.Substring(1,29500));
                                    }
                                }
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("a47ee956-b933-4561-9ad0-8ae946fa52f6")]
                                varHeadValidateRespStatus = xpath(msguspHeadValidateResp,"string(/*[local-name()='InterfacePCFPeppolHeaderValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation']/*[local-name()='resStatus' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation'])");
                                varHeadValidateRespmsg = xpath(msguspHeadValidateResp,"string(/*[local-name()='InterfacePCFPeppolHeaderValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation']/*[local-name()='resDescription' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolHeaderValidation'])");
                            }
                            exceptions
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("00f42c32-aa41-4cd4-b263-57865cc7b6aa")]
                                catch (Microsoft.XLANGs.BaseTypes.DeliveryFailureException ex)
                                {
                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("7157593b-dab1-4788-a1a4-d1411826fe3e")]
                                    varHeadValidateRespStatus = "false";
                                }
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("8a5024be-de56-4470-9186-99937373d13a")]
                        if (varHeadValidateRespStatus == "true")
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("3fcd5197-515b-4bd0-a78a-b8ed058a4d50")]
                            construct msgPeppolXML
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("5d8854d8-b887-4dd2-a878-2c96ac25adf8")]
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML.Load(varPeppolXMLPath);
                                msgPeppolXML=varTempXML;
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("7466798f-14ef-4989-a48a-550c9795dee5")]
                            varInvoiceLineCount = System.Convert.ToInt32(xpath(msgPeppolXML,"count(/*[local-name()='StandardBusinessDocument' and namespace-uri()='http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader']/*[local-name()='Invoice' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2']/*[local-name()='InvoiceLine' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'])"));
                            System.Diagnostics.EventLog.WriteEntry("InvoiceLineCount",varInvoiceLineCount.ToString());
                            
                            varAttachmentsCount  = System.Convert.ToInt32(xpath(msgPeppolXML,"count(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='AdditionalDocumentReference'])"));
                            
                            //varInvLineCount = System.Convert.ToInt32(xpath(msgPeppolXML,"count(/*[local-name()='StandardBusinessDocument' and namespace-uri()='http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader']/*[local-name()='CreditNote' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2']/*[local-name()='CreditNoteLine' and namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'])"));
                            //System.Diagnostics.EventLog.WriteEntry("CreditLineCount",varInvLineCount.ToString());
                            
                            varGRNNumber = xpath(msgPeppolXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='DocumentReference']/*[local-name()='ID'])");
                            System.Diagnostics.EventLog.WriteEntry("GRNNumber",varGRNNumber);
                            
                            varGRNCount = System.Convert.ToInt32(xpath(msgPeppolXML,"count(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='DocumentReference']/*[local-name()='ID']/text()[contains(.,'" + varGRNNumber + "')])"));
                            System.Diagnostics.EventLog.WriteEntry("GRNCount",varGRNCount.ToString());
                            
                            if(((varInvoiceLineCount > 0) & (varInvoiceLineCount == varGRNCount)) || (varInvoiceLineCount == 0) || (varGRNCount == 0))
                            {
                                isMultipleGRN = "N";
                            }
                            else
                            {
                               isMultipleGRN = "Y";
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("24c623c5-2f74-4f1a-9f5c-1c76ed61d0d2")]
                            construct msgInternalXML
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("7e3d697d-7f05-4e08-8880-7f12f1a97520")]
                                transform (msgInternalXML) = Sp.PCFPeppol.Transforms.Map_PeppolXML_PCFPeppolInternal (msgPeppolXML);
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("6213f182-6672-4318-88fa-dd2420e1b77a")]
                            if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "ShowAdminLogs")) == "Yes")
                            {
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msgPeppolXML;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolXML",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolXML",varTempXML.OuterXml.Substring(1,29500));
                                }
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msgInternalXML;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgInternalXML",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgInternalXML",varTempXML.OuterXml.Substring(1,29500));
                                }
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("e5cedfd7-d7cf-4fb8-b281-20f6ad1d9b5b")]
                            varInvLineLoopCounter = 0;
                            varInvoiceLineCount = System.Convert.ToInt32(xpath(msgInternalXML,"count(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine'])"));
                            System.Diagnostics.EventLog.WriteEntry("PCFPeppolInvLineCount",varInvoiceLineCount.ToString());
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("50b2e481-9aef-426a-855a-b830d0ee7bed")]
                            while (varInvLineLoopCounter < varInvoiceLineCount)
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("783e037e-f006-4f14-af4d-8c3e4c88910d")]
                                scope
                                {
                                    body
                                    {
                                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("2dec3747-4cf6-4eb6-990c-4ed0bd2f5595")]
                                        construct msgInvoiceLine
                                        {
                                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("04f0360a-76cc-4285-be5b-1fbcceb4ae5e")]
                                            varInvLineLoopCounter = varInvLineLoopCounter + 1;
                                            varInvLineLoopItem = varInvLineLoopCounter.ToString();
                                            msgInvoiceLine = xpath(msgInternalXML,"/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']["+ varInvLineLoopItem +"]");
                                        }
                                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("278d99c8-3f3d-457c-a11a-e8bb1d3e56be")]
                                        //varInvoiceID = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='StandardBusinessDocumentHeader']/*[local-name()='DocumentIdentification']/*[local-name()='InstanceIdentifier'])");
                                        varLineId = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='ID'])");
                                        varOrderLineRefId = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='OrderLineReference']/*[local-name()='LineID'])");
                                        varLineQty = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='InvoicedQuantity'])");
                                        varLineAmount = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='LineExtensionAmount'])");
                                        varTaxId = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Item']/*[local-name()='ClassifiedTaxCategory']/*[local-name()='ID'])");
                                        varTaxPercent = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Item']/*[local-name()='ClassifiedTaxCategory']/*[local-name()='Percent'])");
                                        varTaxSchemeName = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Item']/*[local-name()='ClassifiedTaxCategory']/*[local-name()='TaxScheme']/*[local-name()='ID'])");
                                        varUnitPrice = xpath(msgInternalXML,"string(/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='InvoiceLine']/*[local-name()='Price']/*[local-name()='PriceAmount'])");
                                        
                                        if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "ShowAdminLogs")) == "Yes")
                                        {
                                            varTempXML = new System.Xml.XmlDocument();
                                            varTempXML = msgPeppolXML;
                                            if(varTempXML.OuterXml.Length < 30000)
                                            {
                                                System.Diagnostics.EventLog.WriteEntry("msgpeppolxml",varTempXML.OuterXml);
                                            }
                                            else
                                            {
                                                System.Diagnostics.EventLog.WriteEntry("msgpeppolxml",varTempXML.OuterXml.Substring(1,29500));
                                            }
                                            varTempXML = new System.Xml.XmlDocument();
                                            varTempXML = msgInternalXML;
                                            if(varTempXML.OuterXml.Length < 30000)
                                            {
                                                System.Diagnostics.EventLog.WriteEntry("msgInternalXML",varTempXML.OuterXml);
                                            }
                                            else
                                            {
                                                System.Diagnostics.EventLog.WriteEntry("msgInternalXML",varTempXML.OuterXml.Substring(1,29500));
                                            }
                                            System.Diagnostics.EventLog.WriteEntry("InvoiceID",varInvoiceID);
                                            System.Diagnostics.EventLog.WriteEntry("LineId",varLineId);
                                            System.Diagnostics.EventLog.WriteEntry("OrderLineRefId",varOrderLineRefId);
                                            System.Diagnostics.EventLog.WriteEntry("LineQty",varLineQty);
                                            System.Diagnostics.EventLog.WriteEntry("LineAmount",varLineAmount);
                                            System.Diagnostics.EventLog.WriteEntry("TaxId",varTaxId);
                                            System.Diagnostics.EventLog.WriteEntry("TaxPercent",varTaxPercent);
                                            System.Diagnostics.EventLog.WriteEntry("TaxSchemeName",varTaxSchemeName);
                                            System.Diagnostics.EventLog.WriteEntry("UnitPrice",varUnitPrice);
                                        }
                                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("524a37b6-095e-4eac-a013-3001e3a7b697")]
                                        construct msguspItemValidateReq
                                        {
                                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("a3e62cac-89f5-44a5-9044-63739782e5a4")]
                                            varTempXML = new System.Xml.XmlDocument();
                                            varTempXML.LoadXml("<ns0:InterfacePCFPeppolItemValidation xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:ID>" + varInvoiceID + "</ns0:ID><ns0:LineId>" + varLineId + "</ns0:LineId><ns0:OrderRefLineId>" + varOrderLineRefId + "</ns0:OrderRefLineId><ns0:LineQty>" + varLineQty + "</ns0:LineQty><ns0:LineAmount>" + varLineAmount + "</ns0:LineAmount><ns0:TaxId>" + varTaxId + "</ns0:TaxId><ns0:TaxPercent>" + varTaxPercent + "</ns0:TaxPercent><ns0:TaxSchemeName>" + varTaxSchemeName + "</ns0:TaxSchemeName><ns0:UnitPrice>" + varUnitPrice + "</ns0:UnitPrice><ns0:isMultipleGRN>" + isMultipleGRN + "</ns0:isMultipleGRN></ns0:InterfacePCFPeppolItemValidation>");
                                            msguspItemValidateReq = varTempXML;
                                        }
                                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("95d28c9c-2884-4800-b2d9-71e430525b1b")]
                                        send (Port_SndRcvPCFPeppolItemValidate.Operation_1, msguspItemValidateReq);
                                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("33e83685-abc6-4081-9657-fade8cb7208f")]
                                        receive (Port_SndRcvPCFPeppolItemValidate.Operation_1, msguspItemValidateResp);
                                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("c1df02ed-4d8c-4d2e-a4d4-8bf8ff75c664")]
                                        //Do not update response status if already any item is failed
                                        if((varItemValidateRespStatus == "") || (varItemValidateRespStatus == "true"))
                                        {
                                            varItemValidateRespStatus = xpath(msguspItemValidateResp,"string(/*[local-name()='InterfacePCFPeppolItemValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation']/*[local-name()='resStatus' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation'])");
                                            varItemValidateRespmsg = xpath(msguspItemValidateResp,"string(/*[local-name()='InterfacePCFPeppolItemValidationResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation']/*[local-name()='resDescription' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolItemValidation'])");
                                        }
                                    }
                                }
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("e28d0653-662e-4d64-976b-e88b3a3a3c22")]
                            if (varItemValidateRespStatus == "true")
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("6ade3d41-1ab8-469f-adfe-6628257c7bc4")]
                                varAttachSizeLimit = System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "AttachmentSizeLimitMB"));
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("0592cb31-5592-4950-b7ab-832741a46b34")]
                                while (varAttachmentLoopCounter < varAttachmentsCount)
                                {
                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("414c1ba3-010d-468b-940c-f97d77b27b51")]
                                    scope
                                    {
                                        body
                                        {
                                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("1cf2a576-0f8e-4618-b57f-82b473449059")]
                                            construct msgSingleAttachment
                                            {
                                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("b52a555a-7a3a-41a7-986f-de778270c304")]
                                                varAttachmentLoopCounter = varAttachmentLoopCounter + 1;
                                                varAttachmentLoopItem = varAttachmentLoopCounter.ToString();
                                                msgSingleAttachment = xpath(msgInternalXML,"/*[local-name()='StandardBusinessDocument']/*[local-name()='Invoice']/*[local-name()='AdditionalDocumentReference']["+ varAttachmentLoopItem +"]");
                                                varBase64Code = msgSingleAttachment.Attachment.EmbeddedDocumentBinaryObject;
                                            }
                                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("b5d5117b-678d-4cf5-a06a-f8d822ac7811")]
                                            if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "ShowAdminLogs")) == "Yes")
                                            {
                                                varTempXML = new System.Xml.XmlDocument();
                                                varTempXML = msgSingleAttachment;
                                                if(varTempXML.OuterXml.Length < 30000)
                                                {
                                                    System.Diagnostics.EventLog.WriteEntry("msgSingleAttachment",varTempXML.OuterXml);
                                                }
                                                else
                                                {
                                                    System.Diagnostics.EventLog.WriteEntry("msgSingleAttachment",varTempXML.OuterXml.Substring(1,29500));
                                                }
                                            }
                                            varBase64sizeInBytes = 0;
                                            varBase64sizeInKb = 0;
                                            varBase64Length = varBase64Code.Length;
                                            if(varBase64Length > 0)
                                            {
                                                varBase64sizeInBytes = 4 * (System.Math.Ceiling((System.Double)varBase64Length / 3)*0.5624896334383812);
                                                varBase64sizeInKb = (varBase64sizeInBytes/1000);
                                            }
                                            if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "ShowAdminLogs")) == "Yes")
                                            {
                                                System.Diagnostics.EventLog.WriteEntry("varBase64Length",varBase64Length.ToString());
                                                System.Diagnostics.EventLog.WriteEntry("varBase64sizeInBytes",varBase64sizeInBytes.ToString());
                                                System.Diagnostics.EventLog.WriteEntry("varBase64sizeInKb",varBase64sizeInKb.ToString());
                                            }
                                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("4705925a-d423-4b77-9d4c-05914c296296")]
                                            if (varBase64sizeInKb < System.Convert.ToInt32(varAttachSizeLimit))
                                            {
                                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("e085178a-2184-460b-b2d2-908918c04cef")]
                                                construct msguspAttachReq
                                                {
                                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("8cd18dc5-c6f1-46b3-bc87-b80e6c87505f")]
                                                    transform (msguspAttachReq) = Sp.PCFPeppol.Transforms.Map_PeppolAttachment_uspReq (msgSingleAttachment);
                                                }
                                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("196d751f-c21e-459e-ad51-f411487d0deb")]
                                                if(System.Convert.ToString(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "ShowAdminLogs")) == "Yes")
                                                {
                                                    varTempXML = new System.Xml.XmlDocument();
                                                    varTempXML = msguspAttachReq;
                                                    if(varTempXML.OuterXml.Length < 30000)
                                                    {
                                                        System.Diagnostics.EventLog.WriteEntry("msguspAttachReq",varTempXML.OuterXml);
                                                    }
                                                    else
                                                    {
                                                        System.Diagnostics.EventLog.WriteEntry("msguspAttachReq",varTempXML.OuterXml.Substring(1,29500));
                                                    }
                                                }
                                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("28d85f1b-8519-4f47-af5e-da6284487e0c")]
                                                send (Port_SndRcvPCFPeppolAttachment.Operation_1, msguspAttachReq);
                                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("d593757e-3e30-4b0a-825b-cf02cc490e54")]
                                                receive (Port_SndRcvPCFPeppolAttachment.Operation_1, msguspAttachResp);
                                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("04ebcd6c-9aa6-4ce9-ab98-b70fb84bd50c")]
                                                
                                                //Do not update response status if already any item is failed
                                                if((varAttachRespStatus == "") || (varAttachRespStatus == "true"))
                                                {
                                                    varAttachIDResp = xpath(msguspAttachResp,"string(/*[local-name()='InterfacePCFPeppolAttachmentResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/*[local-name()='ID' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/text())");    
                                                    varAttachRespStatus = xpath(msguspAttachResp,"string(/*[local-name()='InterfacePCFPeppolAttachmentResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/*[local-name()='resStatus' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment'])");
                                                    varAttachRespMsg = xpath(msguspAttachResp,"string(/*[local-name()='InterfacePCFPeppolAttachmentResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment']/*[local-name()='resDescription' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfacePCFPeppolAttachment'])");
                                                    if(varAttachmentID == "")
                                                    {
                                                        varAttachmentID =  varAttachIDResp;
                                                    }
                                                    else
                                                    {
                                                        varAttachmentID =  varAttachmentID + "," + varAttachIDResp;
                                                    }
                                                }
                                            }
                                            else 
                                            {
                                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("fbb2337b-6788-4ffb-a8e2-e0f235d4aa90")]
                                                varAttachRespStatus = "false";
                                                varAttachRespMsg = varAttachRespMsg + "Attachment size exceeds 10MB";
                                            }
                                        }
                                    }
                                }
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("e15a1ae7-5372-496e-aa5c-0a9d99ed52ed")]
                                if (varAttachRespStatus == "true")
                                {
                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("10c0ea78-f465-416e-be9b-c2c012f3beb9")]
                                    construct msgGRNInvoicereq
                                    {
                                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("4015da05-4c80-4632-b2d8-ddf0d030bc88")]
                                        varTempXML = new System.Xml.XmlDocument();
                                        varTempXML.LoadXml("<ns0:InterfacePCFPeppolGRNInvoice xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:ID>" + varInvoiceID + "</ns0:ID><ns0:AttachmentID>" + varAttachmentID + "</ns0:AttachmentID></ns0:InterfacePCFPeppolGRNInvoice>");
                                        msgGRNInvoicereq = varTempXML;
                                    }
                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("e9b4d68b-7d7e-4380-ba85-26abab8fb1ce")]
                                    send (Port_SndRcvGRNInvoice.Operation_1, msgGRNInvoicereq);
                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("6913b2ac-7448-4e84-ac64-4d0399b371d0")]
                                    receive (Port_SndRcvGRNInvoice.Operation_1, msgGRNInvoiceresp);
                                }
                                else 
                                {
                                    [Microsoft.XLANGs.BaseTypes.DesignerPosition("e2265ec2-43dd-4ac3-83f2-d112a187b0c0")]
                                    System.Diagnostics.EventLog.WriteEntry("PCFPeppolAttachmentException",varAttachRespMsg);
                                }
                            }
                            else 
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("04359f47-8fb6-4944-a59a-be140ca9d006")]
                                System.Diagnostics.EventLog.WriteEntry("PCFPeppolItemValidationException",varItemValidateRespmsg);
                            }
                        }
                        else 
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("9facf2cd-277a-4a25-818d-230bc95d1681")]
                            System.Diagnostics.EventLog.WriteEntry("PCFPeppolHeadStoredProcResp",varHeadValidateRespmsg);
                        }
                    }
                    exceptions
                    {
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("5af23531-863f-4aff-96cd-b5d2fd4f138a")]
                        catch (System.Exception ex)
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("ced2e284-f63e-4f8b-89cf-9e070df27672")]
                            construct msgErrorLogs
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("e3f73e14-486f-44eb-a691-3f8e8aa49e17")]
                                System.Diagnostics.EventLog.WriteEntry("PeppolToPCFException",ex.Message);
                                varExceptionmsg = ex.Message;
                                varExceptionmsg = varExceptionmsg.Replace("&","&amp;");
                                varExceptionmsg = varExceptionmsg.Replace("'","''");
                                varExceptionmsg = varExceptionmsg.Replace("<","&lt;");
                                varExceptionmsg = varExceptionmsg.Replace(">","&gt;");
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML.LoadXml("<ns0:InterfaceErrorLogs xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:HubID>PCFPeppol</ns0:HubID><ns0:DocumentID>" + varInvoiceID + "</ns0:DocumentID><ns0:DocumentType>PCFPeppol</ns0:DocumentType><ns0:DocumentNumber>" + varInvoiceID + "</ns0:DocumentNumber><ns0:ModuleName>Process_Peppol_To_PCFDB</ns0:ModuleName><ns0:ExceptionType>" + ex.Source + "</ns0:ExceptionType><ns0:ErrorMessage>" + varExceptionmsg + "</ns0:ErrorMessage><ns0:VendorCode>-</ns0:VendorCode><ns0:DocumentPath>-</ns0:DocumentPath></ns0:InterfaceErrorLogs>");
                                
                                msgErrorLogs.Body = varTempXML;
                                
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("2ead8a53-b98c-404c-ba78-1696d2ac94d5")]
                            send (Port_SndPeppolToPCFErrorLogs.Operation_1, msgErrorLogs);
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("6c712252-9a8c-4aa8-949b-95ea25c5784d")]
                            construct msgErrorEmail
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("feebcca7-3f91-4ae0-81f3-f7694c5e307b")]
                                System.Diagnostics.EventLog.WriteEntry("PeppolToPCFException",ex.Message);
                                
                                varEmailBody = new System.Text.StringBuilder();
                                varEmailBody.AppendLine("<html><body>");
                                varEmailBody.AppendLine("<p>PCF Peppol Invoice failed while processing in SESAMi.</p>");
                                varEmailBody.AppendLine("<p><b><u>Error details:</u></b></p><p>");
                                varEmailBody.AppendLine("<b>Application Name</b> : <i>Sp.PCFPeppol</i><br/>");
                                varEmailBody.AppendLine("<b>Process Name</b> : <i>Process_Peppol_To_PCFDB</i><br/>");
                                varEmailBody.AppendLine("<b>InvoiceId</b> : <i>" + varInvoiceID + "</i><br/>");
                                varEmailBody.AppendLine("<b>Failure Code</b> : " + ex.Source + "<br/>");
                                varEmailBody.AppendLine("<b>Error Description</b> : <i>" + ex.Message + "</i><br/>");
                                varEmailBody.AppendLine("</body></html>");
                                msgErrorEmail.Body = new Sp.PCFPeppol.Common.RawString(varEmailBody.ToString());
                                Sp.PCFPeppol.Common.SMTPUtils.SetContentType(msgErrorEmail.Body,"text/html");
                                Port_PeppolToPCFErrorEmail(Microsoft.XLANGs.BaseTypes.Address) = Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "SMTPTo");
                                
                                msgErrorEmail(SMTP.From) = Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "SMTPFrom");
                                
                                msgErrorEmail(SMTP.Subject) = "PCFPeppol failed for Invoice: " + varInvoiceID;
                                
                                msgErrorEmail(SMTP.EmailBodyFileCharset) = "UTF-8";
                                msgErrorEmail(SMTP.CC) = Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "SMTPCCopy");
                                msgErrorEmail(SMTP.SMTPHost)= Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "SMTPHost");
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("efd4a136-e517-40e2-b996-dde9200c74c5")]
                            send (Port_PeppolToPCFErrorEmail.Operation_1, msgErrorEmail);
                        }
                    }
                }
                [Microsoft.XLANGs.BaseTypes.DesignerPosition("7c65718f-84b7-4600-940b-b89e6a12411a")]
                delay new System.TimeSpan(0,0,0,0,System.Convert.ToInt32(Sp.PCFPeppol.Common.SSOClientHelper.Read("Sp.PCFPeppol", "DelayStep1")));
            }
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("20a23ad2-08ec-47d6-bfe8-a4107908e7f2")]
            System.Diagnostics.EventLog.WriteEntry("PeppolToPCFDB Process Complete","PeppolToPCFDB Process Completed");
        }
    }
}

